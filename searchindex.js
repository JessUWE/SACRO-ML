Search.setIndex({"alltitles": {"A Quick Start Guide to implementing Safer Random Forests": [[21, "A-Quick-Start-Guide-to-implementing-Safer-Random-Forests"]], "A Quick Start Guide to implementing Safer Support Vector Machines": [[19, "A-Quick-Start-Guide-to-implementing-Safer-Support-Vector-Machines"]], "API Reference": [[1, "module-sacroml.attacks.attribute_attack"], [2, "module-sacroml.attacks.data"]], "Acknowledgement": [[13, "acknowledgement"]], "Actors": [[0, "actors"]], "Add checks for any unusual data structures": [[28, "add-checks-for-any-unusual-data-structures"]], "As we can see we have several disclosive nodes, one of which is our added point (in purple)": [[20, "As-we-can-see-we-have-several-disclosive-nodes,-one-of-which-is-our-added-point-(in-purple)"]], "Attacks": [[3, null]], "Attribute Attack": [[1, null]], "Attribute Inference": [[18, "Attribute-Inference"]], "Base Class": [[31, null]], "Because min_samples_leaf is 1 this poses a disclosure risk.": [[20, "Because-min_samples_leaf-is-1-this-poses-a-disclosure-risk."]], "CIFAR Dataset Example": [[24, "cifar-dataset-example"]], "Cancer Dataset Example": [[35, "cancer-dataset-example"]], "Commands commented out for path manipulation are for developers only": [[19, "Commands-commented-out-for-path-manipulation-are-for-developers-only"]], "Community and Support": [[13, "community-and-support"]], "Conclusions": [[18, "Conclusions"], [23, "Conclusions"]], "Conda": [[14, "conda"]], "Configuration and Utilities": [[39, "configuration-and-utilities"]], "Contributing": [[11, null]], "Copy The Template": [[28, "copy-the-template"]], "Create the original model": [[18, "Create-the-original-model"], [23, "Create-the-original-model"]], "Data": [[0, "data"]], "Dataset Handlers": [[2, null]], "Define Differentially Private version with DP level (approximate)": [[19, "Define-Differentially-Private-version-with-DP-level-(approximate)"]], "Define the Safer Class": [[28, "define-the-safer-class"]], "Define the model and fit it.": [[19, "Define-the-model-and-fit-it."], [19, "id1"]], "Defining a new class SafeRandomForestClassifier\u00b6": [[21, "Defining-a-new-class-SafeRandomForestClassifier\u00b6"]], "Demonstrate the save and reporting functionality": [[20, "Demonstrate-the-save-and-reporting-functionality"]], "Development": [[11, "development"]], "Diligent user realises problem, and changes their code to enforce at least n samples in each leaf": [[20, "Diligent-user-realises-problem,-and-changes-their-code-to-enforce-at-least-n-samples-in-each-leaf"]], "Disclosure mitigation related": [[0, "disclosure-mitigation-related"]], "Disclosure risks": [[0, "disclosure-risks"]], "Do the posthoc_check": [[20, "Do-the-posthoc_check"]], "Documentation": [[11, "documentation"]], "Drug response prediction for cancer patients": [[23, null]], "Examine the checkfile": [[19, "Examine-the-checkfile"]], "Examine the checkfile contents": [[21, "Examine-the-checkfile-contents"]], "Examine the contents of the checkfile.": [[20, "Examine-the-contents-of-the-checkfile."]], "Example Implementation runs": [[20, "Example-Implementation-runs"]], "Example Notebooks": [[17, null]], "Example summaries": [[12, "example-summaries"]], "Examples": [[12, null], [27, null]], "Extending SafeModel": [[28, null]], "General Structure": [[6, "general-structure"]], "Generating Docs Locally": [[11, "generating-docs-locally"]], "Getting Started": [[13, "getting-started"]], "Glossary and definitions": [[0, null]], "Here\u2019s the raw version": [[20, "Here's-the-raw-version"]], "How does the attack work?": [[18, "How-does-the-attack-work?"], [23, "How-does-the-attack-work?"]], "Images": [[11, "images"]], "Include any optional helper functions": [[28, "include-any-optional-helper-functions"]], "Indices and tables": [[13, "indices-and-tables"]], "Installation": [[14, null]], "Instance based attacks": [[22, null]], "JSON Output for Attacks": [[6, null]], "Keras Models": [[17, "keras-models"]], "Kernel for approximator: equivalent to rbf.": [[19, "Kernel-for-approximator:-equivalent-to-rbf."]], "Lets start by making some data with one disclosive case": [[20, "Lets-start-by-making-some-data-with-one-disclosive-case"], [21, "Lets-start-by-making-some-data-with-one-disclosive-case"]], "Let\u2019s get hands on with this example.": [[18, "Let's-get-hands-on-with-this-example."], [23, "Let's-get-hands-on-with-this-example."]], "LiRA Attack": [[4, null], [6, "lira-attack"]], "Machine learning": [[0, "machine-learning"]], "Membership Inference": [[23, "Membership-Inference"]], "Metrics": [[5, null]], "Mitigation": [[18, "Mitigation"], [23, "Mitigation"]], "Model parameters are within recommended ranges. The saved model can pass through next step of checking procedure": [[19, "Model-parameters-are-within-recommended-ranges.-The-saved-model-can-pass-through-next-step-of-checking-procedure"]], "Model training": [[18, "Model-training"], [23, "Model-training"]], "Modular Design": [[28, "modular-design"]], "Next cell is for developers only:": [[20, "Next-cell-is-for-developers-only:"]], "Notebook Examples": [[16, null]], "Now lets try to attack this approach": [[20, "Now-lets-try-to-attack-this-approach"]], "Nursery Dataset Example": [[35, "nursery-dataset-example"]], "Other": [[0, "other"]], "Other Sklearn Model notebooks": [[17, "other-sklearn-model-notebooks"]], "Override the fit() function": [[28, "override-the-fit-function"]], "Putting it all together": [[21, "Putting-it-all-together"]], "PyTorch Examples": [[24, null]], "Python Package Index": [[14, "python-package-index"]], "Python Risk Examples": [[25, "python-risk-examples"]], "Quick Start": [[11, "quick-start"]], "R Risk Examples": [[25, "r-risk-examples"]], "References": [[1, "references"]], "Report": [[7, null]], "Repository Structure": [[11, "repository-structure"]], "Risk Assessment Examples": [[25, null]], "Risk of cancer prediction for patients with multiple disorders": [[18, null]], "SACRO-ML: Machine Learning Privacy Tools": [[13, "sacro-ml-machine-learning-privacy-tools"]], "Safe Decision Tree Notebook": [[20, null]], "Safe Random Forest Notebook": [[21, null]], "Safe Support Vector Machine Notebook": [[19, null]], "SafeDecisionTree": [[30, null]], "SafeDecisionTree Full Length Tutorial": [[27, "safedecisiontree-full-length-tutorial"]], "SafeModel Examples": [[34, null]], "SafeModel Usage": [[34, "safemodel-usage"]], "SafeRandomForest": [[32, null]], "SafeRandomForest Quick Start Notebook": [[27, "saferandomforest-quick-start-notebook"]], "SafeSVC": [[33, null]], "SafeSVC Quick Start Notebook": [[27, "safesvc-quick-start-notebook"]], "Safemodel": [[29, null]], "Save and Request Release": [[19, "Save-and-Request-Release"], [19, "id2"]], "Scikit-learn Examples": [[35, null]], "Set Parameters to safe values": [[19, "Set-Parameters-to-safe-values"]], "Set parameters": [[19, "Set-parameters"]], "Simple PyTorch Example": [[24, "simple-pytorch-example"]], "So lets define a new class SafeDecisionTreeClassifier": [[20, "So-lets-define-a-new-class-SafeDecisionTreeClassifier"]], "Some basic Libraries for visualization": [[21, "Some-basic-Libraries-for-visualization"]], "Some basic examples to explore what the wrapper class could look like and be implemented": [[20, "Some-basic-examples-to-explore-what-the-wrapper-class-could-look-like-and-be-implemented"]], "Static and Generated Content": [[11, "static-and-generated-content"]], "Structural Attack": [[8, null]], "Style Guide": [[11, "style-guide"]], "Target": [[9, null]], "The attack": [[18, "The-attack"], [23, "The-attack"]], "The checkfile is written in JSON format": [[20, "The-checkfile-is-written-in-JSON-format"]], "The checkfile reports any warnings and recomendations in JSON format": [[21, "The-checkfile-reports-any-warnings-and-recomendations-in-JSON-format"]], "The prelimanary check reports this.": [[20, "The-prelimanary-check-reports-this."]], "The researcher asks for a safe_decision tree but supplies with unsafe params": [[20, "The-researcher-asks-for-a-safe_decision-tree-but-supplies-with-unsafe-params"]], "The researcher asks for a safe_decision tree, changes values to unsafe before fit() then back afterwards": [[20, "The-researcher-asks-for-a-safe_decision-tree,-changes-values-to-unsafe-before-fit()-then-back-afterwards"]], "The researcher changes params safely": [[20, "The-researcher-changes-params-safely"], [20, "id1"]], "The researcher changes params unsafely": [[20, "The-researcher-changes-params-unsafely"]], "The researcher doesn\u2019t change recomended params": [[20, "The-researcher-doesn't-change-recomended-params"]], "Train a model where the min_samples_leaf is 1": [[20, "Train-a-model-where-the-min_samples_leaf-is-1"]], "Training the model": [[22, "Training-the-model"]], "Tutorial": [[17, "tutorial"]], "Unsupported Model Examples": [[37, null]], "Update Sphinx documentation": [[28, "update-sphinx-documentation"]], "Update rules.json file": [[28, "update-rules-json-file"]], "Update the __init__ method with paramnames, ignore_items, and examine_separately items": [[28, "update-the-init-method-with-paramnames-ignore-items-and-examine-separately-items"]], "Usage": [[1, "usage"]], "Use the sklearn Wisconsin breast cancer dataset": [[19, "Use-the-sklearn-Wisconsin-breast-cancer-dataset"]], "User Guide": [[38, null]], "User Stories": [[39, null]], "User Story 1: Basic Model Training and Attack": [[39, "user-story-1-basic-model-training-and-attack"]], "User Story 2: Data Processing and Privacy Assessment": [[39, "user-story-2-data-processing-and-privacy-assessment"]], "User Story 3: Advanced Privacy Analysis": [[39, "user-story-3-advanced-privacy-analysis"]], "Using the save and reporting functionality\u00b6": [[21, "Using-the-save-and-reporting-functionality\u00b6"]], "We are warned that dhat is too low.": [[19, "We-are-warned-that-dhat-is-too-low."]], "We check our now fitted model from the previous step": [[20, "We-check-our-now-fitted-model-from-the-previous-step"]], "We extract and plot the decision tree in order to visualize it.": [[20, "We-extract-and-plot-the-decision-tree-in-order-to-visualize-it."]], "We extract and plot the decision tree.": [[20, "We-extract-and-plot-the-decision-tree."]], "We modify the parameters": [[20, "We-modify-the-parameters"]], "Welcome to SACRO-ML": [[15, null]], "Welcome to the AI-SDC family of tools": [[13, null]], "What SACRO-ML Supports": [[36, null]], "What SACRO-ML attack simulation is not intended for?": [[15, "what-sacro-ml-attack-simulation-is-not-intended-for"]], "What are simulated attacks?": [[15, "what-are-simulated-attacks"]], "What is safemodel?": [[15, "what-is-safemodel"], [26, null]], "When can SACRO-ML attack simulation be used?": [[15, "when-can-sacro-ml-attack-simulation-be-used"]], "Working with Unsupported Models": [[37, "working-with-unsupported-models"]], "Worst Case Attack": [[10, null]], "Worst-Case Attack": [[6, "worst-case-attack"]], "Write pytests to confirm core functionality": [[28, "write-pytests-to-confirm-core-functionality"]], "and import some basic libraries to show our point": [[20, "and-import-some-basic-libraries-to-show-our-point"]], "output is now non-disclosive (at least according to the threshold rule)": [[20, "output-is-now-non-disclosive-(at-least-according-to-the-threshold-rule)"]], "starting with listing the params then trying to set the params manually after init": [[20, "starting-with-listing-the-params-then-trying-to-set-the-params-manually-after-init"]]}, "docnames": ["Glossary", "attacks/attribute", "attacks/data", "attacks/index", "attacks/likelihood", "attacks/metrics", "attacks/output_format", "attacks/report", "attacks/structural", "attacks/target", "attacks/worst_case", "contributing", "examples", "index", "installation", "introduction", "notebook_examples", "notebooks/README", "notebooks/attribute_inference_cancer", "notebooks/example-notebook-SVC", "notebooks/example-notebook-decisiontree", "notebooks/example-notebook-randomforest", "notebooks/instance_based_mimic", "notebooks/membership_inference_cancer", "pytorch_examples", "risk_examples", "safemodel", "safemodel/examples", "safemodel/extending", "safemodel/index", "safemodel/safedecisiontree", "safemodel/safemodel", "safemodel/saferandomforest", "safemodel/safesvc", "safemodel_examples", "scikit_learn_examples", "support", "unsupported_examples", "user_guide", "user_stories"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["Glossary.rst", "attacks/attribute.rst", "attacks/data.rst", "attacks/index.rst", "attacks/likelihood.rst", "attacks/metrics.rst", "attacks/output_format.rst", "attacks/report.rst", "attacks/structural.rst", "attacks/target.rst", "attacks/worst_case.rst", "contributing.rst", "examples.rst", "index.rst", "installation.rst", "introduction.rst", "notebook_examples.rst", "notebooks/README.md", "notebooks/attribute_inference_cancer.ipynb", "notebooks/example-notebook-SVC.ipynb", "notebooks/example-notebook-decisiontree.ipynb", "notebooks/example-notebook-randomforest.ipynb", "notebooks/instance_based_mimic.ipynb", "notebooks/membership_inference_cancer.ipynb", "pytorch_examples.rst", "risk_examples.rst", "safemodel.rst", "safemodel/examples.rst", "safemodel/extending.rst", "safemodel/index.rst", "safemodel/safedecisiontree.rst", "safemodel/safemodel.rst", "safemodel/saferandomforest.rst", "safemodel/safesvc.rst", "safemodel_examples.rst", "scikit_learn_examples.rst", "support.rst", "unsupported_examples.rst", "user_guide.rst", "user_stories.rst"], "indexentries": {"__annotations__ (sacroml.safemodel.safemodel.safemodel attribute)": [[31, "sacroml.safemodel.safemodel.SafeModel.__annotations__", false]], "__apply_constraints() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__apply_constraints", false]], "__check_model_param() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__check_model_param", false]], "__check_model_param_and() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__check_model_param_and", false]], "__check_model_param_or() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__check_model_param_or", false]], "__dict__ (sacroml.safemodel.safemodel.safemodel attribute)": [[31, "sacroml.safemodel.safemodel.SafeModel.__dict__", false]], "__get_constraints() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__get_constraints", false]], "__init__() (sacroml.attacks.attribute_attack.attributeattack method)": [[1, "sacroml.attacks.attribute_attack.AttributeAttack.__init__", false]], "__init__() (sacroml.attacks.data.basedatahandler method)": [[2, "sacroml.attacks.data.BaseDataHandler.__init__", false]], "__init__() (sacroml.attacks.data.pytorchdatahandler method)": [[2, "sacroml.attacks.data.PyTorchDataHandler.__init__", false]], "__init__() (sacroml.attacks.data.sklearndatahandler method)": [[2, "sacroml.attacks.data.SklearnDataHandler.__init__", false]], "__init__() (sacroml.attacks.likelihood_attack.liraattack method)": [[4, "sacroml.attacks.likelihood_attack.LIRAAttack.__init__", false]], "__init__() (sacroml.attacks.report.customjsonencoder method)": [[7, "sacroml.attacks.report.CustomJSONEncoder.__init__", false]], "__init__() (sacroml.attacks.structural_attack.structuralattack method)": [[8, "sacroml.attacks.structural_attack.StructuralAttack.__init__", false]], "__init__() (sacroml.attacks.structural_attack.structuralattackresults method)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.__init__", false]], "__init__() (sacroml.attacks.structural_attack.structuralrecordlevelresults method)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.__init__", false]], "__init__() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.__init__", false]], "__init__() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.__init__", false]], "__init__() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.__init__", false]], "__init__() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.__init__", false]], "__init__() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.__init__", false]], "__init__() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__init__", false]], "__module__ (sacroml.safemodel.safemodel.safemodel attribute)": [[31, "sacroml.safemodel.safemodel.SafeModel.__module__", false]], "__str__() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.__str__", false]], "add_feature() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.add_feature", false]], "add_safemodel_results() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.add_safemodel_results", false]], "additional_checks() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.additional_checks", false]], "additional_checks() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.additional_checks", false]], "additional_checks() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.additional_checks", false]], "additional_checks() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.additional_checks", false]], "apply() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.apply", false]], "apply() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.apply", false]], "attack() (sacroml.attacks.attribute_attack.attributeattack method)": [[1, "sacroml.attacks.attribute_attack.AttributeAttack.attack", false]], "attack() (sacroml.attacks.likelihood_attack.liraattack method)": [[4, "sacroml.attacks.likelihood_attack.LIRAAttack.attack", false]], "attack() (sacroml.attacks.structural_attack.structuralattack method)": [[8, "sacroml.attacks.structural_attack.StructuralAttack.attack", false]], "attack() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.attack", false]], "attack_from_preds() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.attack_from_preds", false]], "attackable() (sacroml.attacks.attribute_attack.attributeattack class method)": [[1, "sacroml.attacks.attribute_attack.AttributeAttack.attackable", false]], "attackable() (sacroml.attacks.likelihood_attack.liraattack class method)": [[4, "sacroml.attacks.likelihood_attack.LIRAAttack.attackable", false]], "attackable() (sacroml.attacks.structural_attack.structuralattack class method)": [[8, "sacroml.attacks.structural_attack.StructuralAttack.attackable", false]], "attackable() (sacroml.attacks.worst_case_attack.worstcaseattack class method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.attackable", false]], "attributeattack (class in sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.AttributeAttack", false]], "auc_p_val() (in module sacroml.metrics)": [[5, "sacroml.metrics.auc_p_val", false]], "basedatahandler (class in sacroml.attacks.data)": [[2, "sacroml.attacks.data.BaseDataHandler", false]], "check_equal() (in module sacroml.safemodel.safemodel)": [[31, "sacroml.safemodel.safemodel.check_equal", false]], "check_max() (in module sacroml.safemodel.safemodel)": [[31, "sacroml.safemodel.safemodel.check_max", false]], "check_min() (in module sacroml.safemodel.safemodel)": [[31, "sacroml.safemodel.safemodel.check_min", false]], "check_type() (in module sacroml.safemodel.safemodel)": [[31, "sacroml.safemodel.safemodel.check_type", false]], "class_disclosure (sacroml.attacks.structural_attack.structuralrecordlevelresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.class_disclosure", false]], "class_disclosure_risk (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.class_disclosure_risk", false]], "cost_complexity_pruning_path() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.cost_complexity_pruning_path", false]], "create_lr_report() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.create_lr_report", false]], "create_mia_report() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.create_mia_report", false]], "create_structural_report() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.create_structural_report", false]], "customjsonencoder (class in sacroml.attacks.report)": [[7, "sacroml.attacks.report.CustomJSONEncoder", false]], "dataset_module_path (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.dataset_module_path", false]], "dataset_name (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.dataset_name", false]], "decision_path() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.decision_path", false]], "decision_path() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.decision_path", false]], "decision_tree_internal_trees_are_equal() (in module sacroml.safemodel.classifiers.safedecisiontreeclassifier)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.decision_tree_internal_trees_are_equal", false]], "decision_trees_are_equal() (in module sacroml.safemodel.classifiers.safedecisiontreeclassifier)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.decision_trees_are_equal", false]], "default() (sacroml.attacks.report.customjsonencoder method)": [[7, "sacroml.attacks.report.CustomJSONEncoder.default", false]], "details (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.details", false]], "dof_risk (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.dof_risk", false]], "dof_risk (sacroml.attacks.structural_attack.structuralrecordlevelresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.dof_risk", false]], "encode() (sacroml.attacks.report.customjsonencoder method)": [[7, "sacroml.attacks.report.CustomJSONEncoder.encode", false]], "estimators_samples_ (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier property)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.estimators_samples_", false]], "examine_seperate_items() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.examine_seperate_items", false]], "examine_seperate_items() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.examine_seperate_items", false]], "examine_seperate_items() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.examine_seperate_items", false]], "examine_seperate_items() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.examine_seperate_items", false]], "examine_seperately_items (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.examine_seperately_items", false]], "examine_seperately_items (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.examine_seperately_items", false]], "feature_importances_ (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier property)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.feature_importances_", false]], "feature_importances_ (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier property)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.feature_importances_", false]], "features (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.features", false]], "filename (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.filename", false]], "filename (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.filename", false]], "fit() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.fit", false]], "fit() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.fit", false]], "fit() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.fit", false]], "generate_arrays() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.generate_arrays", false]], "get_current_and_saved_models() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.get_current_and_saved_models", false]], "get_current_and_saved_models() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.get_current_and_saved_models", false]], "get_current_and_saved_models() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.get_current_and_saved_models", false]], "get_current_and_saved_models() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.get_current_and_saved_models", false]], "get_data() (sacroml.attacks.data.sklearndatahandler method)": [[2, "sacroml.attacks.data.SklearnDataHandler.get_data", false]], "get_dataloader() (sacroml.attacks.data.pytorchdatahandler method)": [[2, "sacroml.attacks.data.PyTorchDataHandler.get_dataloader", false]], "get_dataset() (sacroml.attacks.data.pytorchdatahandler method)": [[2, "sacroml.attacks.data.PyTorchDataHandler.get_dataset", false]], "get_depth() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.get_depth", false]], "get_generalisation_error() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.get_generalisation_error", false]], "get_k_anonymity() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.get_k_anonymity", false]], "get_metadata_routing() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.get_metadata_routing", false]], "get_metrics() (in module sacroml.metrics)": [[5, "sacroml.metrics.get_metrics", false]], "get_model_param_count() (in module sacroml.attacks.structural_attack)": [[8, "sacroml.attacks.structural_attack.get_model_param_count", false]], "get_n_leaves() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.get_n_leaves", false]], "get_params() (sacroml.attacks.attribute_attack.attributeattack method)": [[1, "sacroml.attacks.attribute_attack.AttributeAttack.get_params", false]], "get_params() (sacroml.attacks.likelihood_attack.liraattack method)": [[4, "sacroml.attacks.likelihood_attack.LIRAAttack.get_params", false]], "get_params() (sacroml.attacks.structural_attack.structuralattack method)": [[8, "sacroml.attacks.structural_attack.StructuralAttack.get_params", false]], "get_params() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.get_params", false]], "get_params() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.get_params", false]], "get_params() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.get_params", false]], "get_params() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.get_params", false]], "get_params() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.get_params", false]], "get_raw_data() (sacroml.attacks.data.sklearndatahandler method)": [[2, "sacroml.attacks.data.SklearnDataHandler.get_raw_data", false]], "get_raw_dataset() (sacroml.attacks.data.pytorchdatahandler method)": [[2, "sacroml.attacks.data.PyTorchDataHandler.get_raw_dataset", false]], "get_subset() (sacroml.attacks.data.sklearndatahandler method)": [[2, "sacroml.attacks.data.SklearnDataHandler.get_subset", false]], "get_tree_k_anonymity() (in module sacroml.safemodel.classifiers.safedecisiontreeclassifier)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.get_tree_k_anonymity", false]], "get_unnecessary_risk() (in module sacroml.attacks.structural_attack)": [[8, "sacroml.attacks.structural_attack.get_unnecessary_risk", false]], "has_data() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.has_data", false]], "has_model() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.has_model", false]], "has_probas() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.has_probas", false]], "has_raw_data() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.has_raw_data", false]], "ignore_items (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.ignore_items", false]], "ignore_items (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.ignore_items", false]], "indices_test (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.indices_test", false]], "indices_train (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.indices_train", false]], "item_separator (sacroml.attacks.report.customjsonencoder attribute)": [[7, "sacroml.attacks.report.CustomJSONEncoder.item_separator", false]], "iterencode() (sacroml.attacks.report.customjsonencoder method)": [[7, "sacroml.attacks.report.CustomJSONEncoder.iterencode", false]], "k_anonymity (sacroml.attacks.structural_attack.structuralrecordlevelresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.k_anonymity", false]], "k_anonymity_risk (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.k_anonymity_risk", false]], "k_hat_svm() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.k_hat_svm", false]], "key_separator (sacroml.attacks.report.customjsonencoder attribute)": [[7, "sacroml.attacks.report.CustomJSONEncoder.key_separator", false]], "line() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.line", false]], "liraattack (class in sacroml.attacks.likelihood_attack)": [[4, "sacroml.attacks.likelihood_attack.LIRAAttack", false]], "load() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.load", false]], "load_array() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.load_array", false]], "load_pytorch_dataset() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.load_pytorch_dataset", false]], "load_sklearn_dataset() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.load_sklearn_dataset", false]], "min_max_disc() (in module sacroml.metrics)": [[5, "sacroml.metrics.min_max_disc", false]], "model (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.model", false]], "model_load_file (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.model_load_file", false]], "model_load_file (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.model_load_file", false]], "model_module_path (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.model_module_path", false]], "model_name (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.model_name", false]], "model_params (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.model_params", false]], "model_path (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.model_path", false]], "model_save_file (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.model_save_file", false]], "model_save_file (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.model_save_file", false]], "model_type (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.model_type", false]], "model_type (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.model_type", false]], "module": [[1, "module-sacroml.attacks.attribute_attack", false], [2, "module-sacroml.attacks.data", false], [4, "module-sacroml.attacks.likelihood_attack", false], [5, "module-sacroml.metrics", false], [7, "module-sacroml.attacks.report", false], [8, "module-sacroml.attacks.structural_attack", false], [9, "module-sacroml.attacks.target", false], [10, "module-sacroml.attacks.worst_case_attack", false], [30, "module-sacroml.safemodel.classifiers.safedecisiontreeclassifier", false], [31, "module-sacroml.safemodel.safemodel", false], [32, "module-sacroml.safemodel.classifiers.saferandomforestclassifier", false], [33, "module-sacroml.safemodel.classifiers.safesvc", false]], "n_features (sacroml.attacks.target.target property)": [[9, "sacroml.attacks.target.Target.n_features", false]], "phi_hat() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.phi_hat", false]], "phi_hat_multi() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.phi_hat_multi", false]], "plot_categorical_fraction() (in module sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.plot_categorical_fraction", false]], "plot_categorical_risk() (in module sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.plot_categorical_risk", false]], "plot_quantitative_risk() (in module sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.plot_quantitative_risk", false]], "posthoc_check() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.posthoc_check", false]], "posthoc_check() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.posthoc_check", false]], "posthoc_check() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.posthoc_check", false]], "posthoc_check() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.posthoc_check", false]], "predict() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.predict", false]], "predict() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.predict", false]], "predict() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.predict", false]], "predict_log_proba() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.predict_log_proba", false]], "predict_log_proba() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.predict_log_proba", false]], "predict_proba() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.predict_proba", false]], "predict_proba() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.predict_proba", false]], "predict_proba() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.predict_proba", false]], "preliminary_check() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.preliminary_check", false]], "preliminary_check() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.preliminary_check", false]], "preliminary_check() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.preliminary_check", false]], "preliminary_check() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.preliminary_check", false]], "proba_test (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.proba_test", false]], "proba_train (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.proba_train", false]], "pytorchdatahandler (class in sacroml.attacks.data)": [[2, "sacroml.attacks.data.PyTorchDataHandler", false]], "report_categorical() (in module sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.report_categorical", false]], "report_quantitative() (in module sacroml.attacks.attribute_attack)": [[1, "sacroml.attacks.attribute_attack.report_quantitative", false]], "request_release() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.request_release", false]], "request_release() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.request_release", false]], "request_release() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.request_release", false]], "request_release() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.request_release", false]], "researcher (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.researcher", false]], "researcher (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.researcher", false]], "run_attack() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.run_attack", false]], "run_attack() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.run_attack", false]], "run_attack() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.run_attack", false]], "run_attack() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.run_attack", false]], "run_attack_reps() (sacroml.attacks.worst_case_attack.worstcaseattack method)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack.run_attack_reps", false]], "sacroml.attacks.attribute_attack": [[1, "module-sacroml.attacks.attribute_attack", false]], "sacroml.attacks.data": [[2, "module-sacroml.attacks.data", false]], "sacroml.attacks.likelihood_attack": [[4, "module-sacroml.attacks.likelihood_attack", false]], "sacroml.attacks.report": [[7, "module-sacroml.attacks.report", false]], "sacroml.attacks.structural_attack": [[8, "module-sacroml.attacks.structural_attack", false]], "sacroml.attacks.target": [[9, "module-sacroml.attacks.target", false]], "sacroml.attacks.worst_case_attack": [[10, "module-sacroml.attacks.worst_case_attack", false]], "sacroml.metrics": [[5, "module-sacroml.metrics", false]], "sacroml.safemodel.classifiers.safedecisiontreeclassifier": [[30, "module-sacroml.safemodel.classifiers.safedecisiontreeclassifier", false]], "sacroml.safemodel.classifiers.saferandomforestclassifier": [[32, "module-sacroml.safemodel.classifiers.saferandomforestclassifier", false]], "sacroml.safemodel.classifiers.safesvc": [[33, "module-sacroml.safemodel.classifiers.safesvc", false]], "sacroml.safemodel.safemodel": [[31, "module-sacroml.safemodel.safemodel", false]], "safedecisiontreeclassifier (class in sacroml.safemodel.classifiers.safedecisiontreeclassifier)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier", false]], "safemodel (class in sacroml.safemodel.safemodel)": [[31, "sacroml.safemodel.safemodel.SafeModel", false]], "safemodel (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.safemodel", false]], "saferandomforestclassifier (class in sacroml.safemodel.classifiers.saferandomforestclassifier)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier", false]], "safesvc (class in sacroml.safemodel.classifiers.safesvc)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC", false]], "save() (sacroml.attacks.target.target method)": [[9, "sacroml.attacks.target.Target.save", false]], "save() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.save", false]], "save() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.save", false]], "save() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.save", false]], "save() (sacroml.safemodel.safemodel.safemodel method)": [[31, "sacroml.safemodel.safemodel.SafeModel.save", false]], "score() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.score", false]], "score() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.score", false]], "set_fit_request() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_fit_request", false]], "set_fit_request() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.set_fit_request", false]], "set_params() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_params", false]], "set_params() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.set_params", false]], "set_params() (sacroml.safemodel.classifiers.safesvc.safesvc method)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.set_params", false]], "set_score_request() (sacroml.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[30, "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_score_request", false]], "set_score_request() (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.set_score_request", false]], "sklearndatahandler (class in sacroml.attacks.data)": [[2, "sacroml.attacks.data.SklearnDataHandler", false]], "smallgroup_risk (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.smallgroup_risk", false]], "smallgroup_risk (sacroml.attacks.structural_attack.structuralrecordlevelresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.smallgroup_risk", false]], "structuralattack (class in sacroml.attacks.structural_attack)": [[8, "sacroml.attacks.structural_attack.StructuralAttack", false]], "structuralattackresults (class in sacroml.attacks.structural_attack)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults", false]], "structuralrecordlevelresults (class in sacroml.attacks.structural_attack)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults", false]], "subtitle() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.subtitle", false]], "target (class in sacroml.attacks.target)": [[9, "sacroml.attacks.target.Target", false]], "timestamp (sacroml.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier attribute)": [[32, "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.timestamp", false]], "timestamp (sacroml.safemodel.classifiers.safesvc.safesvc attribute)": [[33, "sacroml.safemodel.classifiers.safesvc.SafeSVC.timestamp", false]], "title() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.title", false]], "train_module_path (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.train_module_path", false]], "train_params (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.train_params", false]], "unnecessary_risk (sacroml.attacks.structural_attack.structuralattackresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralAttackResults.unnecessary_risk", false]], "unnecessary_risk (sacroml.attacks.structural_attack.structuralrecordlevelresults attribute)": [[8, "sacroml.attacks.structural_attack.StructuralRecordLevelResults.unnecessary_risk", false]], "worstcaseattack (class in sacroml.attacks.worst_case_attack)": [[10, "sacroml.attacks.worst_case_attack.WorstCaseAttack", false]], "write_json() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.write_json", false]], "write_pdf() (in module sacroml.attacks.report)": [[7, "sacroml.attacks.report.write_pdf", false]], "x_test (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.X_test", false]], "x_test_orig (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.X_test_orig", false]], "x_train (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.X_train", false]], "x_train_orig (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.X_train_orig", false]], "y_test (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.y_test", false]], "y_test_orig (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.y_test_orig", false]], "y_train (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.y_train", false]], "y_train_orig (sacroml.attacks.target.target attribute)": [[9, "sacroml.attacks.target.Target.y_train_orig", false]]}, "objects": {"sacroml": [[5, 0, 0, "-", "metrics"]], "sacroml.attacks": [[1, 0, 0, "-", "attribute_attack"], [2, 0, 0, "-", "data"], [4, 0, 0, "-", "likelihood_attack"], [7, 0, 0, "-", "report"], [8, 0, 0, "-", "structural_attack"], [9, 0, 0, "-", "target"], [10, 0, 0, "-", "worst_case_attack"]], "sacroml.attacks.attribute_attack": [[1, 1, 1, "", "AttributeAttack"], [1, 3, 1, "", "plot_categorical_fraction"], [1, 3, 1, "", "plot_categorical_risk"], [1, 3, 1, "", "plot_quantitative_risk"], [1, 3, 1, "", "report_categorical"], [1, 3, 1, "", "report_quantitative"]], "sacroml.attacks.attribute_attack.AttributeAttack": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "attack"], [1, 2, 1, "", "attackable"], [1, 2, 1, "", "get_params"]], "sacroml.attacks.data": [[2, 1, 1, "", "BaseDataHandler"], [2, 1, 1, "", "PyTorchDataHandler"], [2, 1, 1, "", "SklearnDataHandler"]], "sacroml.attacks.data.BaseDataHandler": [[2, 2, 1, "", "__init__"]], "sacroml.attacks.data.PyTorchDataHandler": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_dataloader"], [2, 2, 1, "", "get_dataset"], [2, 2, 1, "", "get_raw_dataset"]], "sacroml.attacks.data.SklearnDataHandler": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_data"], [2, 2, 1, "", "get_raw_data"], [2, 2, 1, "", "get_subset"]], "sacroml.attacks.likelihood_attack": [[4, 1, 1, "", "LIRAAttack"]], "sacroml.attacks.likelihood_attack.LIRAAttack": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "attack"], [4, 2, 1, "", "attackable"], [4, 2, 1, "", "get_params"]], "sacroml.attacks.report": [[7, 1, 1, "", "CustomJSONEncoder"], [7, 3, 1, "", "create_lr_report"], [7, 3, 1, "", "create_mia_report"], [7, 3, 1, "", "create_structural_report"], [7, 3, 1, "", "line"], [7, 3, 1, "", "subtitle"], [7, 3, 1, "", "title"], [7, 3, 1, "", "write_json"], [7, 3, 1, "", "write_pdf"]], "sacroml.attacks.report.CustomJSONEncoder": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "default"], [7, 2, 1, "", "encode"], [7, 4, 1, "", "item_separator"], [7, 2, 1, "", "iterencode"], [7, 4, 1, "", "key_separator"]], "sacroml.attacks.structural_attack": [[8, 1, 1, "", "StructuralAttack"], [8, 1, 1, "", "StructuralAttackResults"], [8, 1, 1, "", "StructuralRecordLevelResults"], [8, 3, 1, "", "get_model_param_count"], [8, 3, 1, "", "get_unnecessary_risk"]], "sacroml.attacks.structural_attack.StructuralAttack": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "attack"], [8, 2, 1, "", "attackable"], [8, 2, 1, "", "get_params"]], "sacroml.attacks.structural_attack.StructuralAttackResults": [[8, 2, 1, "", "__init__"], [8, 4, 1, "", "class_disclosure_risk"], [8, 4, 1, "", "details"], [8, 4, 1, "", "dof_risk"], [8, 4, 1, "", "k_anonymity_risk"], [8, 4, 1, "", "smallgroup_risk"], [8, 4, 1, "", "unnecessary_risk"]], "sacroml.attacks.structural_attack.StructuralRecordLevelResults": [[8, 2, 1, "", "__init__"], [8, 4, 1, "", "class_disclosure"], [8, 4, 1, "", "dof_risk"], [8, 4, 1, "", "k_anonymity"], [8, 4, 1, "", "smallgroup_risk"], [8, 4, 1, "", "unnecessary_risk"]], "sacroml.attacks.target": [[9, 1, 1, "", "Target"]], "sacroml.attacks.target.Target": [[9, 4, 1, "", "X_test"], [9, 4, 1, "", "X_test_orig"], [9, 4, 1, "", "X_train"], [9, 4, 1, "", "X_train_orig"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "add_feature"], [9, 2, 1, "", "add_safemodel_results"], [9, 4, 1, "", "dataset_module_path"], [9, 4, 1, "", "dataset_name"], [9, 4, 1, "", "features"], [9, 2, 1, "", "get_generalisation_error"], [9, 2, 1, "", "has_data"], [9, 2, 1, "", "has_model"], [9, 2, 1, "", "has_probas"], [9, 2, 1, "", "has_raw_data"], [9, 4, 1, "", "indices_test"], [9, 4, 1, "", "indices_train"], [9, 2, 1, "", "load"], [9, 2, 1, "", "load_array"], [9, 2, 1, "", "load_pytorch_dataset"], [9, 2, 1, "", "load_sklearn_dataset"], [9, 4, 1, "", "model"], [9, 4, 1, "", "model_module_path"], [9, 4, 1, "", "model_name"], [9, 4, 1, "", "model_params"], [9, 4, 1, "", "model_path"], [9, 5, 1, "", "n_features"], [9, 4, 1, "", "proba_test"], [9, 4, 1, "", "proba_train"], [9, 4, 1, "", "safemodel"], [9, 2, 1, "", "save"], [9, 4, 1, "", "train_module_path"], [9, 4, 1, "", "train_params"], [9, 4, 1, "", "y_test"], [9, 4, 1, "", "y_test_orig"], [9, 4, 1, "", "y_train"], [9, 4, 1, "", "y_train_orig"]], "sacroml.attacks.worst_case_attack": [[10, 1, 1, "", "WorstCaseAttack"]], "sacroml.attacks.worst_case_attack.WorstCaseAttack": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "attack"], [10, 2, 1, "", "attack_from_preds"], [10, 2, 1, "", "attackable"], [10, 2, 1, "", "generate_arrays"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "run_attack_reps"]], "sacroml.metrics": [[5, 3, 1, "", "auc_p_val"], [5, 3, 1, "", "get_metrics"], [5, 3, 1, "", "min_max_disc"]], "sacroml.safemodel": [[31, 0, 0, "-", "safemodel"]], "sacroml.safemodel.classifiers": [[30, 0, 0, "-", "safedecisiontreeclassifier"], [32, 0, 0, "-", "saferandomforestclassifier"], [33, 0, 0, "-", "safesvc"]], "sacroml.safemodel.classifiers.safedecisiontreeclassifier": [[30, 1, 1, "", "SafeDecisionTreeClassifier"], [30, 3, 1, "", "decision_tree_internal_trees_are_equal"], [30, 3, 1, "", "decision_trees_are_equal"], [30, 3, 1, "", "get_tree_k_anonymity"]], "sacroml.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "additional_checks"], [30, 2, 1, "", "apply"], [30, 2, 1, "", "cost_complexity_pruning_path"], [30, 2, 1, "", "decision_path"], [30, 2, 1, "", "examine_seperate_items"], [30, 5, 1, "", "feature_importances_"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "get_current_and_saved_models"], [30, 2, 1, "", "get_depth"], [30, 2, 1, "", "get_metadata_routing"], [30, 2, 1, "", "get_n_leaves"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "posthoc_check"], [30, 2, 1, "", "predict"], [30, 2, 1, "", "predict_log_proba"], [30, 2, 1, "", "predict_proba"], [30, 2, 1, "", "preliminary_check"], [30, 2, 1, "", "request_release"], [30, 2, 1, "", "run_attack"], [30, 2, 1, "", "save"], [30, 2, 1, "", "score"], [30, 2, 1, "", "set_fit_request"], [30, 2, 1, "", "set_params"], [30, 2, 1, "", "set_score_request"]], "sacroml.safemodel.classifiers.saferandomforestclassifier": [[32, 1, 1, "", "SafeRandomForestClassifier"]], "sacroml.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "additional_checks"], [32, 2, 1, "", "apply"], [32, 2, 1, "", "decision_path"], [32, 5, 1, "", "estimators_samples_"], [32, 2, 1, "", "examine_seperate_items"], [32, 4, 1, "", "examine_seperately_items"], [32, 5, 1, "", "feature_importances_"], [32, 4, 1, "", "filename"], [32, 2, 1, "", "fit"], [32, 2, 1, "", "get_current_and_saved_models"], [32, 2, 1, "", "get_k_anonymity"], [32, 2, 1, "", "get_metadata_routing"], [32, 2, 1, "", "get_params"], [32, 4, 1, "", "ignore_items"], [32, 4, 1, "", "model_load_file"], [32, 4, 1, "", "model_save_file"], [32, 4, 1, "", "model_type"], [32, 2, 1, "", "posthoc_check"], [32, 2, 1, "", "predict"], [32, 2, 1, "", "predict_log_proba"], [32, 2, 1, "", "predict_proba"], [32, 2, 1, "", "preliminary_check"], [32, 2, 1, "", "request_release"], [32, 4, 1, "", "researcher"], [32, 2, 1, "", "run_attack"], [32, 2, 1, "", "save"], [32, 2, 1, "", "score"], [32, 2, 1, "", "set_fit_request"], [32, 2, 1, "", "set_params"], [32, 2, 1, "", "set_score_request"], [32, 4, 1, "", "timestamp"]], "sacroml.safemodel.classifiers.safesvc": [[33, 1, 1, "", "SafeSVC"]], "sacroml.safemodel.classifiers.safesvc.SafeSVC": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "additional_checks"], [33, 2, 1, "", "examine_seperate_items"], [33, 4, 1, "", "examine_seperately_items"], [33, 4, 1, "", "filename"], [33, 2, 1, "", "fit"], [33, 2, 1, "", "get_current_and_saved_models"], [33, 2, 1, "", "get_params"], [33, 4, 1, "", "ignore_items"], [33, 2, 1, "", "k_hat_svm"], [33, 4, 1, "", "model_load_file"], [33, 4, 1, "", "model_save_file"], [33, 4, 1, "", "model_type"], [33, 2, 1, "", "phi_hat"], [33, 2, 1, "", "phi_hat_multi"], [33, 2, 1, "", "posthoc_check"], [33, 2, 1, "", "predict"], [33, 2, 1, "", "predict_proba"], [33, 2, 1, "", "preliminary_check"], [33, 2, 1, "", "request_release"], [33, 4, 1, "", "researcher"], [33, 2, 1, "", "run_attack"], [33, 2, 1, "", "save"], [33, 2, 1, "", "set_params"], [33, 4, 1, "", "timestamp"]], "sacroml.safemodel.safemodel": [[31, 1, 1, "", "SafeModel"], [31, 3, 1, "", "check_equal"], [31, 3, 1, "", "check_max"], [31, 3, 1, "", "check_min"], [31, 3, 1, "", "check_type"]], "sacroml.safemodel.safemodel.SafeModel": [[31, 4, 1, "", "__annotations__"], [31, 2, 1, "", "__apply_constraints"], [31, 2, 1, "", "__check_model_param"], [31, 2, 1, "", "__check_model_param_and"], [31, 2, 1, "", "__check_model_param_or"], [31, 4, 1, "", "__dict__"], [31, 2, 1, "", "__get_constraints"], [31, 2, 1, "", "__init__"], [31, 4, 1, "", "__module__"], [31, 2, 1, "", "__str__"], [31, 2, 1, "", "additional_checks"], [31, 2, 1, "", "examine_seperate_items"], [31, 2, 1, "", "get_current_and_saved_models"], [31, 2, 1, "", "get_params"], [31, 2, 1, "", "posthoc_check"], [31, 2, 1, "", "preliminary_check"], [31, 2, 1, "", "request_release"], [31, 2, 1, "", "run_attack"], [31, 2, 1, "", "save"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [0, 1, 4, 8, 10, 24, 30, 32, 34, 35, 37, 39], "0": [4, 5, 7, 10, 13, 18, 19, 20, 21, 22, 23, 24, 30, 32, 33, 34, 35, 37, 39], "001": 24, "01": [19, 20, 21, 22], "01604": 5, "03570": 4, "05": [4, 10, 35, 37], "06161495": 23, "09396": 8, "0x000002c060e51240": 18, "0x159e5341140": 23, "0x159e5341840": 23, "0x292909260": 20, "0x292909340": 20, "0x2c05fdd5240": 18, "0x2c91c5636d0": 22, "1": [1, 5, 6, 10, 13, 15, 18, 19, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 37], "10": [1, 7, 8, 10, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 37, 39], "100": [4, 5, 18, 21, 23, 24, 35, 37, 39], "1000": [19, 24, 33], "100px": 11, "106": 5, "11": [7, 18, 20, 23, 34, 35, 39], "1109": 1, "12": [7, 18, 19, 20, 21, 23, 34, 35, 39], "120": 24, "1234": [18, 23], "12345": [18, 23], "13": [18, 20, 23, 34, 35, 39], "14": [18, 20, 22, 23, 34, 35, 39], "15": [18, 20, 21, 34, 35, 39], "15803859": 23, "16": [1, 18, 20, 23, 24, 34, 35, 39], "17": [18, 20, 23, 30, 34, 35, 39], "1709": 5, "18": [18, 20, 30, 32, 34, 35, 39], "19": [18, 20, 22, 34, 35, 39], "199": [18, 23], "2": [0, 5, 10, 18, 19, 20, 21, 22, 23, 24, 34, 35, 37], "20": [8, 15, 18, 20, 23, 34, 35, 39], "200": [18, 23, 37], "200px": 11, "2011": 1, "2012": 1, "2018": 0, "2023": [19, 20, 21], "21": [18, 19, 20, 34, 35, 39], "2112": 4, "2159271": 1, "22": [18, 20, 34, 35, 39], "23": [18, 20, 34, 35, 39], "24": [7, 18, 22, 34, 35, 39], "25": [34, 35, 39], "2502": 8, "26": [22, 34, 35, 39], "2f": [18, 23, 39], "3": [0, 1, 18, 19, 20, 21, 22, 23, 24, 30, 32, 34, 35, 37], "30": 15, "32": [0, 2, 24], "34": [19, 20, 21], "35": 21, "36": 22, "378039": 18, "39": [20, 22], "4": [5, 13, 18, 19, 20, 21, 22, 23, 24, 34, 35, 39], "40": 24, "42": [18, 23, 39], "421279": 18, "431": 1, "441": [1, 22], "45": 0, "46": 22, "47": 20, "473850": 18, "48": 23, "48550": 8, "49": [18, 19, 23], "4f": [34, 35], "5": [5, 10, 15, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 35, 37, 39], "50": 15, "500": 19, "50000": 24, "500000": 18, "51": [18, 21, 23], "52": 23, "53": 18, "534109": 18, "54": 23, "542322": 18, "542361": 18, "545445": 18, "55": [0, 18, 22, 23], "559613": 18, "577007": 18, "593411": 18, "6": [4, 18, 19, 20, 21, 22, 23, 24, 34, 35, 39], "60000": 24, "62": [18, 23], "63": [18, 23], "638978": 18, "65": 20, "654893": 18, "67": 22, "676913": 18, "683948": 18, "684278": 18, "686306": 18, "7": [18, 19, 20, 21, 22, 23, 34, 35, 39], "72": [18, 23], "727526": 18, "754672": 18, "767166": 18, "77": [18, 23], "797924": 18, "798": 22, "798077": 18, "8": [18, 19, 20, 21, 23, 34, 35, 39], "80": 23, "803217": 18, "812857": 18, "83": [18, 23], "834142": 18, "835714": 18, "84": [23, 24], "84196141": 23, "847483": 18, "863876": 18, "87": [18, 22, 23], "9": [18, 19, 20, 21, 23, 24, 34, 35, 39], "90": [5, 18, 23], "92": 23, "93": 23, "938385": 18, "93838505": 23, "95": [18, 20], "9668874172185431": 20, "99": [18, 23], "A": [0, 1, 2, 6, 8, 10, 11, 13, 23, 24, 27, 30, 31, 32, 33, 35, 39], "AND": 31, "And": [18, 23], "As": [18, 22], "At": 10, "But": 20, "FOR": 39, "For": [0, 4, 6, 7, 10, 15, 18, 22, 23, 25, 28, 30, 32, 36], "If": [5, 7, 10, 11, 24, 30, 31, 32, 33, 39], "In": [0, 7, 10, 15, 18, 20, 22, 23, 28, 30, 32], "It": [0, 1, 7, 10, 11, 13, 15, 18, 20, 22, 23, 26, 28, 30, 32], "Its": 0, "NOT": 39, "OR": 31, "One": [10, 23], "Such": [0, 23], "That": [4, 32], "The": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 13, 15, 17, 22, 26, 30, 31, 32, 33, 34, 39], "Their": 23, "Then": [11, 28], "There": [0, 11, 23], "These": [0, 8, 15, 25, 31, 37], "To": [0, 1, 7, 10, 18, 39], "With": [4, 18], "_": [15, 18, 21, 22, 39], "__": [30, 32], "__annotations__": 31, "__apply_constraint": 31, "__check_model_param": 31, "__check_model_param_and": 31, "__check_model_param_or": 31, "__dict__": [20, 28, 30, 31, 32, 33], "__doc__": 31, "__file__": 19, "__get_constraint": 31, "__init__": [1, 2, 4, 7, 8, 9, 10, 24, 30, 31, 32, 33, 35], "__len__": [24, 35], "__main__": [24, 34, 35, 37, 39], "__module__": 31, "__name__": [24, 34, 35, 37, 39], "__str__": [20, 31], "__weakref__": 31, "_build": 11, "_one_shot": 7, "_safemodel__apply_constraint": 31, "_safemodel__check_model_param": 31, "_safemodel__check_model_param_and": 31, "_safemodel__check_model_param_or": 31, "_safemodel__get_constraint": 31, "_tree": [20, 30], "abc": [9, 24, 35], "abil": 0, "abl": [0, 11, 22], "about": [0, 9, 18, 23, 25, 36], "abov": [0, 1, 11, 22, 23, 39], "abspath": [11, 19, 20, 21], "abstract": 2, "ac": 13, "academ": 0, "acc": 5, "acc_test": [34, 35], "acc_train": [34, 35], "access": [0, 1, 6, 10, 13, 15, 18, 22, 23, 24, 39], "accident": 0, "account": 0, "accur": 1, "accuraci": [5, 10, 20, 21, 30, 32, 34, 35, 39], "accuracy_scor": 39, "achiev": 0, "acquir": 0, "acquisit": 0, "acro": 13, "across": [6, 7, 10, 12, 32], "act": [0, 39], "action": [11, 39], "actual": [1, 5, 10, 23], "ad": [0, 11, 21, 30, 32, 39], "adaboost": 8, "adapt": [0, 37], "add": [0, 9, 18, 20, 21, 23, 35], "add_argu": 39, "add_featur": [9, 34, 35, 39], "add_safemodel_result": 9, "addit": [0, 1, 8, 10, 17, 22, 31], "additional_check": [30, 31, 32, 33], "adjust": 0, "administr": 13, "admit": 22, "adr": 13, "advanc": [12, 24], "advantag": 5, "adversari": 0, "after": [0, 28, 39], "ag": [0, 18, 22, 23], "again": 18, "against": [0, 5, 23], "age2": [18, 23], "aggreg": 0, "agreement": 0, "ai": [0, 5, 11, 15, 17, 19, 20, 21], "aia": 0, "aim": [15, 26], "aisdc": [19, 20, 21], "al": 1, "alarm": 5, "algorithm": [0, 1, 20], "alia": [30, 32], "align": [8, 11], "all": [0, 1, 6, 7, 8, 9, 10, 11, 13, 18, 20, 22, 23, 24, 32, 35, 39], "all_combin": 18, "allow": [0, 1, 10, 15, 18, 19, 20, 21, 23, 26, 30, 32, 39], "allow_nan": 7, "almost": [0, 23], "alon": 0, "along": 35, "alpha": 30, "alreadi": [7, 24, 39], "also": [0, 1, 5, 13, 18, 22, 23, 30, 32, 35, 39], "alt": 11, "alter": 0, "altern": [0, 11, 30, 32], "although": [18, 28], "alwai": [0, 18, 20, 23], "am": 20, "ambigu": 23, "amongst": 5, "amount": 0, "an": [0, 1, 2, 4, 5, 7, 8, 10, 11, 15, 18, 20, 21, 22, 23, 24, 26, 28, 30, 32, 33, 37, 39], "analys": 12, "analysi": [0, 8, 13], "analyt": [0, 13], "andi": [15, 26], "ani": [0, 1, 7, 9, 10, 11, 13, 15, 18, 20, 23, 30, 31, 37, 39], "anonym": [0, 8, 15, 30, 32], "anonymis": 0, "anoth": [0, 23], "answer": 0, "ant": [13, 34, 36], "anyon": 18, "anyth": [0, 23], "anywher": 0, "api": [12, 13], "appear": 32, "append": [7, 19, 20, 21, 39], "appetit": 8, "appli": [0, 6, 8, 12, 15, 21, 28, 30, 31, 32, 33], "applic": [0, 15], "apply_constraint": [28, 30, 31, 32, 33], "approach": [1, 12], "appropri": [20, 30, 31, 32, 33], "approv": 0, "approxim": [5, 16], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 20, 22, 23, 25, 26, 28, 30, 31, 32, 33, 35, 37, 39], "arang": [18, 23, 39], "architectur": [0, 8, 24], "area": 0, "arg": 39, "argpars": 39, "argument": 39, "argumentpars": 39, "arial": 7, "aris": 0, "around": 34, "arr": 1, "arr_path": 9, "arrai": [2, 5, 7, 9, 10, 20, 23, 30, 32, 35, 39], "array_equ": 28, "artefact": 39, "artifici": 0, "arxiv": [4, 5, 8], "as_fram": [34, 35, 37], "asarrai": [19, 34, 35, 39], "ascend": 18, "ascii": 7, "aspect": [0, 18], "assert": 5, "assess": [0, 1, 4, 5, 8, 10, 12, 13, 24, 34, 35, 36], "assign": [0, 18, 23], "assist": 0, "associ": [18, 23], "assum": [0, 1, 18, 20, 23, 39], "assumpt": 0, "asthma": [18, 23], "astyp": 22, "attack": [0, 2, 5, 7, 9, 11, 13, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38], "attack_experiment_logg": [6, 7], "attack_from_pr": 10, "attack_input": 18, "attack_instance_logg": [6, 7], "attack_model": [10, 37], "attack_model_param": [10, 37], "attack_nam": [6, 30, 31, 32, 33, 39], "attack_output": 7, "attack_param": 6, "attack_pathnam": 39, "attack_report_formatt": 39, "attack_result": 39, "attack_valu": 18, "attempt": [0, 7, 18, 23, 37], "attr_nam": 9, "attribut": [0, 3, 8, 9, 20, 23, 24, 25, 30, 31, 32, 33, 35, 38, 39], "attribute_attack": [1, 35], "attribute_inference_ol": 25, "attributeattack": [1, 35], "attributeerror": 39, "auc": [5, 6], "auc_p": 5, "auc_p_val": 5, "auc_p_valu": [4, 10], "auc_sig": 6, "auc_std": 5, "augment": 0, "autom": [0, 13], "automat": [7, 11, 13, 20, 28, 34], "automodul": 11, "avail": [0, 7, 15, 18, 23, 25, 30, 32, 33, 35, 37], "averag": [5, 10, 23], "avoid": 15, "awar": 34, "ax": [20, 21], "ax2": 20, "axi": 23, "b": [0, 7, 10], "back": [30, 31, 32, 33], "bad": 0, "bag": 32, "balanc": [0, 18, 23, 37], "bar": [1, 7], "base": [0, 2, 7, 8, 10, 12, 15, 25, 28, 29, 30, 32, 34, 35, 38, 39], "base_estim": 28, "base_estimator_": 28, "basedatahandl": 2, "baseestim": 8, "baselin": [6, 10, 23], "baseline_global_metr": 6, "basemodel_paramnam": [20, 28], "basi": [0, 7], "basic": [24, 28], "basicconfig": [19, 22, 37], "batch_siz": [2, 24], "baz": 7, "bear": 15, "becaus": [0, 18], "becom": [0, 15, 18, 23], "been": [0, 6, 13, 15, 18, 20, 23, 30, 31, 32, 33, 39], "befor": [0, 11, 15, 18, 23, 34, 36], "behavior": 7, "behaviour": 5, "being": [0, 10, 28], "belief": 0, "belong": [0, 18, 23], "below": [0, 8, 10, 12, 21, 24], "benefici": 0, "benefit": [18, 23, 27], "best": [0, 20], "beta": 10, "better": [0, 22], "between": [0, 1, 5, 20, 23, 30], "big": 0, "bigobject": 7, "binari": [5, 10, 15], "bind": 0, "binomi": 5, "biometr": 0, "bird": 24, "black": 0, "block": 7, "blood": [18, 23], "blood_pressur": [18, 23], "bmi": [18, 22, 23], "bmi_group": [18, 23], "board": [18, 23], "bodi": 0, "bool": [1, 2, 4, 5, 8, 9, 10, 24, 28, 30, 31, 32, 33], "boolean": [30, 31, 32, 33], "boost": 0, "bootstrap": [21, 28, 35, 37, 39], "border": 7, "both": [0, 2, 13, 30, 31, 32, 33], "bound": [1, 20], "box": [0, 10], "branch": 11, "breach": [0, 10, 15], "breah": 18, "break": [18, 23], "breast": [0, 35], "brew": 14, "brief": 11, "broad": 0, "broadcast": 0, "broadli": 0, "brought": [30, 32], "browser": 11, "bug": 11, "build": [0, 11, 15, 39], "built": [11, 13, 18, 23, 37], "bunch": 30, "bypass": 30, "c": [1, 18, 19, 22, 23, 33], "c3": 19, "calcul": [5, 9, 32, 39], "call": [0, 7, 15, 18, 20, 23, 26, 28, 30, 31, 32, 33, 39], "callabl": 39, "came": 4, "can": [0, 1, 3, 4, 7, 8, 10, 11, 12, 13, 17, 18, 23, 24, 28, 30, 32, 35, 37, 39], "cancer": [0, 25], "candid": 0, "cannot": [5, 20, 22, 31], "capabl": [0, 10, 13], "car": 24, "cardin": [30, 32], "care": [15, 28], "carlini": 4, "carri": 30, "case": [0, 3, 5, 7, 11, 12, 13, 15, 18, 22, 23, 30, 31, 32, 33, 35, 37, 38], "cat": 24, "categor": 1, "categori": 0, "caus": [7, 8], "ccp_alpha": [20, 21, 28, 30], "ccp_path": 30, "cd": [11, 28], "cdf": 4, "cell": [1, 8, 16, 22], "center": [11, 12], "centr": 0, "central": 0, "certain": [0, 20, 23], "chanc": [0, 5], "chang": [0, 11, 18, 23, 28, 30, 31, 32, 39], "changelog": 11, "charact": 7, "character": 10, "characterist": 0, "chart": 1, "chdir": 22, "check": [0, 1, 4, 7, 8, 9, 10, 11, 13, 15, 21, 30, 31, 32, 33, 34, 39], "check_circular": 7, "check_equ": 31, "check_input": 30, "check_max": 31, "check_min": 31, "check_typ": 31, "checker": [20, 30, 31, 32, 33], "checkfil": [15, 26], "child": 30, "children": [34, 35, 39], "choic": [0, 5, 18, 23], "choos": 22, "chosen": 0, "chunk": 7, "ci": 11, "cifar": 12, "cifar10": 24, "circular": 7, "circumst": 15, "clark": 1, "class": [0, 1, 2, 4, 7, 8, 9, 10, 23, 24, 29, 30, 32, 33, 34, 35, 38, 39], "class_disclosur": 8, "class_disclosure_risk": 8, "class_weight": [20, 21, 28, 37], "classes_": [20, 30, 32], "classic": 0, "classif": [0, 8, 24, 30, 32], "classifi": [0, 5, 8, 10, 15, 19, 20, 21, 23, 24, 30, 32, 33, 34, 35, 37, 39], "classmethod": [1, 4, 8, 10], "clean": 39, "clear": [0, 18, 22, 23], "clf3": 19, "cli": 24, "click": 12, "clone": 11, "close": [18, 23], "cnn": 24, "cocain": 0, "code": [0, 3, 7, 11, 12, 13, 18, 23, 28, 35, 39], "collabor": 0, "collect": [0, 9, 13, 18, 23, 24, 35], "column": [0, 4, 10, 21, 32, 39], "com": [0, 11], "combin": [0, 10, 18], "come": [4, 23], "command": [11, 13, 39], "comment": [11, 21, 28, 39], "commerci": 0, "commission": 0, "commit": 11, "committe": 0, "common": [8, 11, 13, 15, 22, 23, 26, 28, 34], "commonli": [1, 11], "compact": 7, "compar": [0, 7, 23, 30, 31], "comparison": [22, 23, 31], "compil": 11, "complet": [1, 13, 23], "complex": [0, 8, 20, 21, 30, 31], "compliant": [7, 15, 26], "compon": [0, 6, 30, 32, 36], "compos": 24, "composit": 0, "comprehens": [10, 12, 13, 36, 39], "comput": [0, 1, 5, 6, 10, 18, 30, 32, 33], "concatdataset": 24, "conceiv": 23, "concept": [0, 17], "concern": 15, "conclud": 23, "condit": [0, 1, 18, 23], "conf": 11, "confid": [1, 4, 5, 10, 15, 18, 23, 26], "confidenti": [18, 23], "confifgur": 23, "config": [11, 39], "config_fil": 39, "configur": [11, 13, 18, 23, 30, 32, 34], "confirm": 39, "consid": [1, 5, 8, 15, 17, 20], "consider": 15, "consist": [7, 32], "constitut": [0, 18, 22], "constraint": [28, 30, 31, 32, 33], "construct": [1, 4, 8, 10, 12, 17, 24], "constructor": [7, 24, 31], "contact": [13, 39], "contain": [0, 1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 25, 28, 30, 31, 32, 33, 39], "content": [0, 7, 22, 28, 31, 39], "conting": 23, "continu": 1, "contractu": 0, "contrast": [0, 35], "contribut": [0, 13], "control": [0, 1, 10, 13, 15, 18, 26], "conv1": 24, "conv2": 24, "conv2d": 24, "convert": [5, 7, 30, 32], "convolut": 24, "copd_flg": 22, "cope": 7, "copi": [0, 11, 18, 22, 30, 31, 32, 33], "copyright": 0, "core": 17, "corefunction": 28, "corpor": 0, "correct": [1, 6, 10, 11, 18, 23], "correctli": [30, 32], "correspond": [5, 12, 30, 32], "cost": 30, "cost_complexity_pruning_path": 30, "could": [0, 10, 23], "count": 8, "coupl": [18, 23], "cover": [0, 39], "cp": 28, "cpu": 1, "craft": [20, 21], "creat": [0, 6, 7, 10, 11, 20, 24, 28, 30, 31, 32, 33, 35, 37, 39], "create_lr_report": 7, "create_mia_report": 7, "create_structural_report": 7, "criteria": 30, "criterion": [20, 21, 28, 30, 32], "cross": 0, "csc_matrix": 30, "csr": [30, 32], "csr_matrix": [30, 32], "csv": [9, 37, 39], "cuda": 24, "cultur": 0, "cur_val": 31, "curr_separ": [30, 31, 32, 33], "curr_val": [30, 31, 32, 33], "current": [0, 13, 20, 30, 31, 32, 33], "current_devic": 24, "curv": 22, "custom": [7, 37], "customjsonencod": 7, "cycl": 0, "d": [0, 39], "dai": 7, "dare": 13, "dash": 22, "data": [1, 2, 5, 7, 9, 10, 11, 13, 15, 18, 19, 22, 23, 24, 30, 32, 34, 35, 37], "data_df": 39, "data_handl": 24, "data_id": [34, 35], "data_interfac": 22, "data_nam": [19, 20, 21], "data_preprocess": 22, "data_processing_filenam": 39, "data_processing_function_nam": 39, "data_processing_research": 39, "data_to_be_process": 39, "dataclass": 8, "datafram": [18, 23, 39], "dataload": [2, 24], "datapoint": [30, 32], "dataset": [0, 1, 3, 9, 10, 11, 12, 15, 20, 21, 22, 23, 30, 31, 32, 33, 34, 37, 38, 39], "dataset_26_nurseri": 39, "dataset_filenam": 39, "dataset_module_path": [9, 24, 35], "dataset_nam": [9, 22, 24, 34, 35, 39], "datastructur": [28, 31], "day_icu_intime_num": 22, "deactiv": 0, "deal": [30, 31, 32, 33], "debug": 22, "decid": [18, 23], "decis": [0, 8, 16, 27, 28, 30, 32], "decision_path": [30, 32], "decision_tree_internal_trees_are_equ": 30, "decision_trees_are_equ": 30, "decisiontre": [8, 17], "decisiontreeclassifi": [15, 20, 26, 30], "decod": 7, "decreas": 23, "decrypt": 0, "deep": [12, 15, 30, 31, 32, 33], "deepcopi": 28, "deer": 24, "def": [19, 24, 28, 35, 39], "default": [5, 7, 8, 10, 30, 31, 32, 39], "default_config": 39, "defin": [0, 1, 8, 16, 23, 24, 30, 31, 32, 33, 34, 35, 37, 39], "definit": [5, 24], "degre": [0, 8, 18, 20], "deidentifi": [18, 23], "delet": [15, 20, 26], "deliber": [30, 31, 32, 33], "delimit": 37, "deliv": 13, "demonstr": [0, 12, 16, 18, 22, 23, 24, 25, 34, 35, 37, 39], "depend": [8, 11, 14, 18, 28], "deploi": [0, 11], "deploy": 0, "depth": [0, 30], "deriv": 0, "describ": [8, 9, 10, 31], "descript": [0, 9, 11, 12, 18, 23, 31, 39], "design": [0, 13, 15, 26], "dest": [7, 39], "destruct": 0, "detail": [0, 4, 8, 15, 18, 19, 20, 21, 22, 23, 26, 27, 30, 35, 36, 39], "detailserror": 39, "detect": [0, 20], "determin": [0, 4, 10, 18, 23, 30, 31, 32, 33], "determinist": [0, 20], "develop": [0, 16, 21], "deviat": [4, 5, 6], "devic": 0, "df": [18, 23], "dhat": 33, "di": 22, "diabet": [18, 23], "diagnos": 0, "dict": [1, 4, 5, 7, 8, 9, 10, 28, 30, 31, 32, 33, 39], "dictionari": [1, 5, 7, 9, 10, 18, 30, 31, 32, 33, 39], "did": [0, 4, 18, 23], "didn": [18, 23], "differ": [0, 5, 10, 12, 15, 17, 18, 20, 23, 28], "differenc": 0, "differenti": [0, 16, 33], "difficult": 0, "dim": 28, "dimens": [19, 28], "direct": [22, 39], "directli": [0, 31, 35, 37, 39], "directori": [1, 4, 8, 10, 11, 17, 20, 24, 25, 28, 30, 31, 32, 33, 35, 37, 39], "dirnam": [19, 20, 21], "disabl": 22, "disclos": [0, 1, 23, 30, 31, 32, 33, 34, 39], "disclosive2": 20, "disclosur": [1, 8, 9, 10, 12, 13, 15, 19, 21, 26, 31, 34, 39], "disclosv": [20, 21], "discov": 0, "discoveri": [5, 15], "discretis": 1, "discuss": [1, 11, 13], "diseas": [0, 10], "disord": 25, "dissemin": 0, "distanc": 30, "distinct": [0, 22], "distinguish": [0, 23], "distribut": [0, 4, 10, 23], "diustribut": 5, "do": [10, 15, 18, 19, 21, 22, 23, 26, 28, 30, 39], "doc": [13, 28], "docstr": 11, "document": [0, 7, 12, 13, 17], "doe": [0, 1, 10, 15, 39], "doesn": 23, "dof_risk": 8, "dog": 24, "doi": [1, 8], "domain": [0, 18, 23], "don": [1, 20, 21, 22, 30], "done": [0, 18], "door": [30, 31, 32, 33], "download": 24, "dp": [0, 16], "dpia": 0, "dramat": 18, "drawn": 32, "driver": 24, "drop": [13, 39], "dropout": 0, "drug": [0, 25], "dtype": [18, 19, 23, 30, 32, 34, 35], "due": [8, 14], "dummi": [6, 7, 10], "dummy_attack_experiment_logg": 7, "dummy_attack_experiments_logg": 6, "dummy_attack_metrics_experiment_0": 6, "dummy_attack_metrics_experiment_1": 6, "dummy_attack_metrics_experiment_n": 6, "dump": 39, "dure": [0, 7, 15, 18, 22, 30], "dynam": 32, "e": [0, 1, 6, 11, 15, 18, 23, 28, 30, 31, 32, 33, 39], "each": [0, 1, 4, 6, 7, 8, 10, 11, 12, 18, 21, 23, 30, 32], "earli": 0, "easi": 10, "easiest": 10, "easili": 20, "econom": 0, "ecosystem": 12, "edg": 12, "edit": [11, 20, 28], "educ": 0, "effect": [0, 13, 22, 23, 30], "effici": 0, "effort": 23, "egregi": 0, "egress": 0, "either": [0, 30, 39], "electron": [18, 23], "element": [7, 30, 32], "elif": 39, "elimin": 7, "els": [24, 39], "email": [13, 39], "embed": 15, "emploi": 15, "enabl": [1, 15, 30, 32], "enable_metadata_rout": [30, 32], "enact": 0, "encapsul": [30, 32], "enclav": [0, 15], "encod": [1, 7, 9, 35, 39], "encount": 0, "encrypt": 0, "end": [0, 11, 18, 23, 30, 32], "engin": 0, "enhanc": 13, "enough": 23, "ensembl": [0, 10, 32, 35, 37, 39], "ensur": [0, 7, 11, 15, 28], "ensure_ascii": 7, "entail": 0, "enter": 0, "entiti": 0, "entri": 6, "entropi": [20, 21], "enumer": [18, 35, 39], "environ": [0, 10, 11, 13, 15, 25, 26, 39], "ep": [19, 33], "epoch": 24, "epsrc": 13, "equal": [1, 30, 31], "equival": 8, "error": [9, 11, 15, 20, 26, 30, 32, 39], "escap": 7, "especi": [0, 15], "essenti": [5, 15], "estim": [0, 8, 10, 15, 23, 30, 32], "estimators_": [21, 28], "estimators_samples_": 32, "et": 1, "etc": [0, 2, 7, 10, 11, 15, 18, 23, 30], "eter": [15, 26], "ethnic": 0, "eu": 0, "evalu": [0, 10, 12], "even": [0, 10], "everi": [11, 32], "everyon": [20, 21], "evid": 18, "evolutionari": 1, "exact": [20, 22], "exactli": 0, "examin": 31, "examine_separ": 31, "examine_separately_item": 31, "examine_seperate_item": [30, 31, 32, 33], "examine_seperately_item": [20, 28, 31, 32, 33], "exampl": [0, 1, 3, 5, 6, 7, 10, 11, 13, 15, 21, 22, 28, 29, 30, 31, 32, 33, 38, 39], "except": [20, 39], "excess": 0, "exclud": [30, 31, 32, 33], "exclus": 0, "exec_modul": 39, "execut": [0, 1, 4, 8, 10], "exercis": 20, "exhaust": 1, "exist": [0, 7, 18, 20, 21, 23, 28, 30, 31, 32, 33, 39], "exp": 19, "expandus": [19, 20, 21], "expect": [18, 20, 30, 31, 32, 33], "experi": [0, 6, 7, 10, 39], "experienc": 12, "experiment": 12, "expert": 0, "explicitli": [0, 39], "explor": [13, 27], "export": [0, 22], "export_to_fil": 39, "ext": [9, 19, 20, 21, 30, 31, 32, 33, 34, 39], "extend": [29, 38], "extens": [28, 30, 31, 32, 33], "extract": [0, 2, 18, 23, 28], "extrem": [18, 23], "extremli": [18, 23], "ey": 15, "f": [18, 19, 20, 21, 22, 23, 28, 39], "f1": 5, "facilit": 0, "fact": 18, "factor": 0, "factori": 9, "fail": 10, "fair": 0, "fairli": 20, "fall": [18, 23], "fals": [2, 4, 5, 6, 7, 8, 10, 18, 20, 21, 24, 28, 30, 31, 32, 33, 35, 37, 39], "familiar": 13, "famou": [18, 23], "far": [0, 5], "fast": 13, "fc1": 24, "fc2": 24, "fc3": 24, "featur": [0, 1, 2, 9, 10, 19, 20, 21, 22, 30, 32, 33, 34, 35, 39], "feature_datafram": 39, "feature_enc": [34, 35, 39], "feature_encod": 39, "feature_importances_": [30, 32], "feature_indic": 35, "feature_nam": [34, 35], "feature_v": 18, "feder": 0, "feedback": [15, 26], "feel": [0, 11], "fetch": [24, 32, 35], "fetch_openml": [34, 35], "few": [0, 18, 19, 23], "field": 15, "fig": [20, 21], "fig2": 20, "figsiz": [20, 21, 22], "figur": [10, 22], "file": [0, 8, 9, 11, 20, 22, 30, 31, 32, 33, 34, 37, 39], "filenam": [11, 20, 31, 32, 33, 39], "fill": [18, 20, 21, 39], "final": [0, 18, 23], "financ": [34, 35, 39], "find": [15, 18, 20, 23], "fine": 0, "first": [10, 11, 18, 20, 23, 39], "firstli": 23, "fit": [0, 10, 15, 18, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 37, 39], "fit_transform": [34, 35, 39], "five": 18, "fix": [0, 11, 20, 30, 31, 32, 33], "fix_vari": 4, "fixed_unsaf": 20, "flag": 5, "flatten": [22, 24, 39], "float": [4, 5, 7, 9, 10, 30, 32, 33], "float32": [30, 32], "float64": 19, "fmt": 39, "fnr": 5, "focu": 13, "focus": 12, "folder": [3, 11, 22], "follow": [5, 6, 7, 11, 18, 23, 30, 39], "font": [7, 22], "font_manag": 22, "font_siz": 7, "font_styl": 7, "fontsiz": [20, 21], "foo": 7, "footprint": 32, "forest": [0, 10, 16, 32, 35], "forget": 21, "fork": 11, "form": [0, 23, 30, 31, 32, 33, 34, 35, 39], "formal": 0, "format": [11, 28, 30, 31, 32, 33], "former": [18, 23], "forum": 13, "forward": 24, "found": [3, 17, 20, 24, 28, 39], "four": 18, "fpdf": 7, "fpr": [5, 6, 22], "fraction": [1, 30, 32], "framework": [0, 8, 12, 13, 37], "free": [11, 13], "freedom": [0, 8], "frequenc": [5, 8], "frog": 24, "from": [0, 2, 4, 6, 7, 8, 9, 10, 13, 15, 18, 19, 21, 22, 23, 24, 28, 31, 32, 34, 35, 37, 39], "function": [0, 7, 9, 17, 24, 31, 39], "function_nam": 39, "fundament": 0, "further": 0, "g": [0, 11, 18, 23, 28, 30, 31, 32, 33, 39], "gamma": [18, 19, 22, 23, 33], "gap": [18, 30], "gaussian": [5, 15], "gdpr": 0, "gender_num": 22, "gener": [0, 1, 4, 7, 8, 10, 18, 20, 23, 24, 32, 34, 39], "generalis": [0, 1, 9], "generalisation_error": [19, 20, 21], "generate_arrai": 10, "generate_disclosure_risk_report": 39, "generate_report": 39, "generatetextreport": 39, "genet": [0, 1, 20], "genuin": 0, "get": [1, 4, 7, 8, 10, 11, 20, 24, 30, 31, 32, 33, 35, 39], "get_current_and_saved_model": [30, 31, 32, 33], "get_data": [2, 35], "get_data_sklearn": 22, "get_dataload": [2, 24], "get_dataset": [2, 24], "get_depth": 30, "get_device_nam": 24, "get_feature_names_out": 39, "get_generalisation_error": 9, "get_k_anonym": [28, 32], "get_metadata_rout": [30, 32], "get_metr": 5, "get_model_param_count": 8, "get_n_leav": 30, "get_param": [1, 4, 8, 10, 30, 31, 32, 33], "get_raw_data": [2, 35], "get_raw_dataset": [2, 24], "get_subset": [2, 35], "get_train_test_indic": [24, 35], "get_tree_k_anonym": 30, "get_unnecessary_risk": 8, "get_weight": 28, "getattr": 39, "getcwd": 39, "getlogg": [19, 22, 39], "gh": 11, "gini": [20, 21, 30, 32], "git": [11, 22], "github": [0, 11, 13, 17], "give": [0, 10, 15, 18, 20, 21, 23, 26, 32], "given": [0, 5, 6, 7, 9, 10, 18, 23, 30, 31, 32], "global": [4, 6], "global_metr": [6, 7], "go": [11, 23], "goe": [18, 30, 32], "good": [0, 10, 12, 23], "got": [20, 23], "govern": 0, "gradient": 0, "gradientboostingclassifi": 28, "graimatt": [0, 13, 22], "grant": 0, "graphic": 13, "greater": [15, 26], "group": [0, 8, 18, 23], "gt": [18, 20, 22], "guarante": [7, 10, 15], "guess": [22, 23], "gui": 13, "guid": [13, 27, 30, 32], "guidanc": 0, "guidelin": [0, 13], "ha": [0, 1, 6, 9, 10, 13, 15, 18, 20, 22, 23, 26, 30, 31, 32, 33, 39], "hack": 20, "hacked_unsaf": 20, "had": [18, 23], "half": 10, "hand": [0, 20, 21], "handi": 18, "handl": [2, 28, 39], "handler": [3, 24, 35, 38], "happen": [0, 23], "happi": 39, "harder": 23, "harmon": 5, "harsh": [30, 32], "has_data": 9, "has_model": 9, "has_nur": [34, 35, 39], "has_proba": 9, "has_raw_data": 9, "have": [0, 6, 7, 10, 15, 18, 22, 23, 24, 28, 30, 31, 32, 39], "haven": [0, 18, 23], "hdr": 13, "he": 18, "head": [18, 23], "health": [0, 13, 18, 23, 34, 35, 39], "heart": 0, "heaven": 15, "height": 11, "help": [0, 13, 15, 17, 20, 21, 24, 34, 39], "henc": 23, "here": [11, 17, 18, 22, 23, 30, 32, 33, 39], "high": [0, 4, 5, 8, 10, 15, 18, 23, 30, 32], "higher": [10, 18, 23, 32], "highest": [1, 5, 10, 18, 23, 32], "histori": 0, "hoc": [13, 34, 36], "hold": [0, 10], "home": [18, 19, 20, 21, 23], "hope": [17, 23], "hopefulli": 23, "hors": 24, "hospit": 22, "host": [10, 11], "hous": [34, 35, 39], "household": 0, "how": [0, 3, 11, 12, 16, 24, 30, 32, 34, 35, 37, 39], "howev": [10, 18, 23, 39], "hstack": 23, "html": [11, 13], "http": [0, 4, 5, 8, 11, 13, 17], "human": [0, 15], "hyper": [0, 8], "hyperparamet": [0, 8, 9, 10, 39], "hypothesi": [4, 5], "hypothet": 11, "i": [0, 1, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39], "iaccd": 22, "ico": 0, "id": [6, 31], "idea": 23, "ideal": [0, 15], "ident": 0, "identif": 0, "identifi": [0, 6, 8, 10, 15, 19, 20, 21, 26, 30, 31, 32, 33, 34], "ie": 0, "ieee": 1, "ignor": [30, 31, 32], "ignore_item": [20, 31, 32, 33], "ii": 8, "illustr": [12, 22], "iloc": [18, 23], "imag": 0, "imagin": 10, "immedi": [0, 22], "impact": 0, "implement": [0, 2, 4, 5, 8, 10, 15, 24, 26, 27, 28, 35, 39], "implicitli": [0, 39], "import": [0, 7, 11, 18, 19, 21, 22, 23, 24, 30, 32, 34, 35, 37, 39], "importlib": 39, "impos": 0, "improv": [0, 13], "impur": [30, 32], "inadvert": 0, "inappropri": 20, "incid": 0, "includ": [0, 1, 5, 8, 10, 11, 12, 13, 15, 20, 22, 39], "include_model_correct_featur": 10, "inclus": [0, 10], "incom": 7, "incomprehens": 0, "incorrect": 5, "incorrectli": 5, "increas": [0, 30, 31, 32, 33], "increasingli": 15, "inde": 23, "indent": 7, "independ": [0, 5], "index": [11, 13, 18, 23, 28, 30, 32, 35], "indic": [2, 9, 18, 23, 24, 30, 31, 32, 33, 34, 35, 39], "indices_test": [9, 24, 35], "indices_train": [9, 24, 35], "indirectli": 0, "individu": [0, 4, 5, 8, 18, 22, 23, 39], "inf": 20, "infer": [0, 1, 7, 10, 20, 24, 25, 30, 31, 32, 33, 35], "infin": 7, "infinit": 7, "info": [19, 22, 24, 34, 35, 37, 39], "inform": [0, 1, 9, 18, 23, 25, 30, 31, 32, 33, 35, 36], "inherit": 28, "initialis": 33, "inlin": 22, "inner": 22, "innov": 13, "inplac": 39, "input": [0, 9, 23, 24, 30, 32, 33, 39], "input_arrai": 23, "input_featur": 33, "input_vector": 33, "insert": [7, 11, 19, 20, 21], "insid": 39, "inspect": [0, 30, 32], "instal": [11, 13], "instanc": [0, 4, 6, 10, 15, 25, 30, 32], "instance_0": 6, "instance_1": 6, "instance_n": 6, "instanti": [2, 9], "instead": [10, 30, 32, 39], "instruct": [0, 39], "int": [1, 2, 4, 5, 7, 8, 9, 10, 22, 24, 30, 32, 33, 35, 39], "int64": [18, 23], "integ": [7, 10, 22, 30], "integr": [12, 13, 34], "intellig": 0, "interact": [12, 16, 25], "interest": [0, 11, 18], "interf": [20, 30, 31, 32, 33], "interfac": [2, 13, 37], "intern": [0, 30, 32], "interpret": 0, "intric": 15, "introduct": 13, "intrud": 0, "invalid": 39, "invest": 34, "investig": [18, 23], "invok": 39, "involv": [0, 15, 23], "io": [11, 13, 17], "ion": [15, 26], "ipynb": 17, "iri": [20, 21], "is_avail": 24, "isinst": 39, "issu": [11, 13, 15, 22], "item": [7, 30, 31, 32, 33, 39], "item_separ": 7, "iter": [0, 6, 10], "iterencod": 7, "itertool": 18, "its": [0, 22, 23, 32, 39], "itself": 23, "j": [1, 19], "j4": [19, 20, 21], "javascript": [7, 28], "jessuw": 13, "join": 39, "joint": 0, "jointli": 0, "jpg": 11, "json": [1, 3, 4, 7, 8, 10, 11, 15, 19, 26, 30, 31, 32, 33, 38, 39], "jsonencod": 7, "june": 1, "jupyt": [12, 16, 25], "just": [0, 18, 20, 22, 23, 28, 31], "justif": 39, "k": [0, 8, 15, 18, 22, 23, 30, 32], "k_anonym": [8, 20, 21, 28], "k_anonymity_risk": 8, "k_hat_svm": 33, "kei": [0, 6, 7, 18, 28, 31, 39], "kera": [31, 39], "kernel": [0, 15], "key1": 39, "key_separ": 7, "kind": [18, 23], "knn": 15, "know": [1, 18, 20, 21, 23, 30], "knowledg": 18, "knowledgei": 18, "known": [0, 5, 18, 23, 30, 32], "kwarg": [28, 30, 32, 33], "l": 1, "label": [1, 5, 8, 18, 20, 21, 22, 23, 30, 32, 39], "label_enc": [34, 35, 39], "labelencod": [34, 35, 39], "languag": 13, "larg": 8, "larger": 23, "last": [20, 30, 31, 32, 33], "later": [20, 23], "latter": [1, 30, 32], "layer": [0, 24, 28], "lazi": 0, "lbfg": 37, "lead": [0, 1, 8, 18], "leaf": [30, 32], "leak": [1, 18, 23], "leakag": [10, 11, 15], "learn": [2, 8, 9, 11, 12, 15, 16, 18, 22, 23, 26, 28, 31, 34, 36, 37, 39], "learner": 0, "learning_r": 24, "least": [0, 15], "leav": [0, 30, 39], "legal": 0, "legend": 22, "legisl": [0, 18, 23], "len": [18, 22, 23, 24, 28, 35], "length": [10, 24, 35], "less": [15, 18, 19, 20, 21, 26, 31], "let": 0, "level": [0, 7, 8, 16, 22, 23, 30, 31, 32, 33, 37], "leverag": 10, "li": 1, "libomp": 14, "librari": [13, 18, 23], "licens": [0, 11], "life": 0, "like": [0, 8, 11, 15, 18, 23, 30, 32], "likelihood": [4, 10], "likelihood_attack": [4, 24, 35, 37, 39], "limit": [0, 1, 28, 37], "line": [7, 11, 18, 19, 20, 21, 22, 23, 39], "line2d": 22, "linear": [0, 24], "linear_model": [23, 37], "link": [6, 12, 28], "lint": 11, "lira": [3, 7, 35, 37, 38, 39], "lira_attack_obj": 39, "liraattack": [4, 24, 35, 37, 39], "list": [7, 8, 9, 10, 11, 18, 23, 28, 30, 31, 32, 33, 39], "live": [0, 18], "liver_flg": 22, "ll": [20, 21], "load": [0, 2, 9, 22, 24, 34, 35, 37, 39], "load_arrai": 9, "load_breast_canc": [19, 35, 37], "load_iri": [20, 21], "load_pytorch_dataset": 9, "load_sklearn_dataset": 9, "loader": [2, 24, 39], "loadtxt": [37, 39], "loc": [18, 23], "local": [0, 15], "locat": [0, 39], "log": [4, 5, 6, 19, 22, 24, 30, 31, 32, 34, 35, 37, 39], "log_id": 6, "log_p": 5, "log_tim": 6, "logger": [6, 19], "logic": 31, "logisticregress": [23, 37], "logp": 5, "longer": 0, "look": [0, 18, 23], "lose": 0, "loss": 0, "lot": [11, 23], "low": [5, 8, 10, 18, 23], "lower": 20, "lowest": 5, "lowvals_cd_risk": 8, "lr": 23, "lt": [18, 20, 22], "lung": 0, "lvq": [0, 15], "lwl": [0, 15], "m": 1, "m1": 28, "m1d": 28, "m1layer": 28, "m2": 28, "m2d": 28, "m2layer": 28, "machin": [8, 11, 12, 15, 16, 18, 22, 23, 26, 28, 31, 34, 36, 37, 39], "maco": 14, "made": [0, 10, 11, 18, 23], "mai": [0, 5, 11, 14, 15, 19, 20, 21, 26, 28, 31, 32], "main": [4, 11, 17, 28, 36, 39], "maintain": 6, "make": [0, 1, 7, 11, 18, 22, 23, 28, 31, 39], "makedir": 39, "male": 0, "malici": 0, "mammogram": 0, "man": 28, "manag": [0, 13], "mani": [0, 15, 30, 32], "manner": 0, "manual": 39, "manual_se": 24, "manual_seed_al": 24, "manualdt": 20, "map": [0, 1, 4, 8, 10, 15], "mappingproxi": 31, "match": [24, 28, 35], "mathemat": 0, "matplotlib": [20, 21, 22], "matrix": [30, 32, 33], "matter": 23, "max": [20, 21, 23], "max_depth": [20, 21, 28, 30, 39], "max_featur": [20, 21, 28], "max_features_": 20, "max_it": 37, "max_leaf_nod": [20, 21, 28], "max_sampl": [21, 28], "maxd": 5, "maximum": [0, 10, 23, 30, 31], "maxpool2d": 24, "mayb": 23, "mc_pc_21033": 13, "mc_pc_23006": 13, "mc_pc_24038": 13, "md": 11, "mdc": 0, "me": 20, "mean": [0, 5, 6, 23, 30, 32], "measur": [0, 1, 4], "mechan": [30, 32], "medic": [0, 15], "meet": 0, "member": [0, 4, 5, 7, 10, 18, 23, 32], "membership": [0, 5, 7, 10, 25], "membership_inference_solv": 25, "memori": 32, "mental": 0, "merg": 11, "messag": [20, 30, 31, 32, 33, 39], "met": 0, "meta": [30, 32], "metadata": [6, 7, 8, 30, 31, 32, 33, 39], "metadata_rout": [30, 32], "metadatarequest": [30, 32], "meter": [15, 26], "method": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 15, 20, 26, 30, 31, 32, 33, 39], "methodologi": 8, "metric": [1, 3, 4, 6, 7, 8, 10, 12, 22, 30, 32, 38, 39], "mia": [0, 5, 10, 30, 31, 32, 33], "mia_metr": 10, "microdata": 0, "might": [0, 11, 15, 18, 23], "mimic2": 22, "min": [15, 19, 20, 21, 26, 31], "min_impurity_decreas": [20, 21, 28], "min_max_desc": 5, "min_max_disc": 5, "min_sampl": 20, "min_sample_split": 10, "min_samples_leaf": [10, 15, 21, 26, 28, 31, 35, 37, 39], "min_samples_split": [20, 21, 28, 35, 39], "min_weight_fraction_leaf": [20, 21, 28], "mind": [5, 15], "minim": 30, "minimal_cost_complexity_prun": 30, "minimis": [0, 20], "minimum": [31, 32], "minist": [18, 23], "minu": 4, "minut": 20, "mirror": [0, 1], "mislead": [30, 32], "miss": [0, 1], "mistak": 0, "mit": 11, "mitig": 15, "mixtur": 11, "ml": [0, 5, 8, 10, 11, 12, 16, 23, 24, 25, 35, 37, 39], "mlp": 8, "mmd": 5, "mode": 4, "model": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 21, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36], "model_filenam": 39, "model_load_fil": [20, 31, 32, 33], "model_module_path": [9, 24], "model_nam": [9, 19, 20, 21], "model_param": [9, 19, 20, 21, 24], "model_path": [9, 19, 20, 21], "model_save_fil": [15, 20, 26, 28, 31, 32, 33], "model_select": [22, 23, 34, 35, 37, 39], "model_typ": [15, 19, 20, 21, 26, 28, 31, 32, 33], "modeltomakesaf": 28, "modifi": [0, 39], "modul": [2, 8, 9, 13, 24, 35, 39], "module_from_spec": 39, "momentum": 24, "monitor": 0, "monoton": 5, "more": [0, 1, 10, 15, 18, 20, 21, 23, 25, 26, 28, 31, 32, 39], "most": [7, 8, 11], "motiv": 0, "move_fil": 39, "mp": [18, 23], "mp_data": 23, "mp_pred": 23, "mqc": 0, "mr": 13, "mrc": 13, "msg": [20, 30, 31, 32, 33, 34], "msg2": 20, "mt19937": [18, 23], "much": [10, 18, 23], "multi": [30, 32], "multipl": [0, 25], "must": [0, 1, 2, 11, 15, 24, 26, 28, 35, 39], "mysocket": 7, "n": [6, 15, 18, 19, 21, 23, 26, 31], "n_class": [30, 32], "n_classes_": 20, "n_cpu": [1, 35], "n_dummy_rep": [6, 10, 35, 37, 39], "n_estim": [21, 28, 32], "n_featur": [9, 19, 20, 21, 30, 32, 34, 39], "n_features_in_": 20, "n_features_raw_data": 39, "n_job": [21, 28], "n_kernel": 24, "n_leav": 30, "n_neg": 5, "n_neg_test_exampl": 6, "n_node": [30, 32], "n_nodes_ptr": 32, "n_output": [30, 32], "n_outputs_": 20, "n_po": 5, "n_pos_test_exampl": 6, "n_rep": [6, 10, 24, 35, 37], "n_row": 10, "n_rows_in": 10, "n_rows_out": 10, "n_sampl": [19, 20, 21, 30, 32], "n_samples_orig": [19, 20, 21], "n_shadow_model": [4, 24, 35, 37, 39], "n_sig_auc_p_v": 6, "n_sig_auc_p_vals_correct": 6, "n_sig_pdif_v": 6, "n_sig_pdif_vals_correct": 6, "n_support_vector": 22, "n_total": 22, "n_unit": 24, "naiv": 20, "name": [0, 1, 4, 6, 8, 9, 10, 18, 19, 20, 21, 23, 24, 30, 31, 32, 33, 35, 39], "nan": 7, "natur": 0, "ndarrai": [2, 5, 7, 9, 10, 28, 30, 32, 33, 35], "neag": 5, "nearest": [0, 15, 22], "necessari": [35, 39], "necessarili": 0, "need": [0, 10, 11, 14, 18, 22, 23, 28, 39], "neg": [5, 7, 20, 30], "neighbour": [0, 15, 22], "neither": 0, "nest": [30, 32], "net": [24, 30], "network": [0, 24], "neural": [0, 24], "neuron": 0, "never": [0, 32], "new": [0, 10, 11, 13, 18, 23, 28], "new_model_templ": 28, "newli": 28, "newlin": 7, "next": [16, 18, 22], "nh": [18, 23], "nn": [8, 24], "node": [30, 32], "node_count": 30, "nois": 0, "noisi": 5, "noisier": 0, "non": [0, 4, 5, 7, 10, 15, 18, 23, 30, 32], "nonamemodel": 20, "none": [1, 2, 4, 7, 8, 9, 10, 20, 23, 24, 28, 30, 31, 32, 33, 35, 39], "norm": 4, "normal": [0, 18, 23, 24, 30, 32, 39], "normpath": [19, 20, 21], "notat": 28, "note": [0, 5, 14, 18, 20, 23, 30, 31, 32, 33, 37, 39], "notebook": [11, 12, 22, 25, 30, 32, 33], "notimplementederror": 39, "now": [18, 21, 22, 23, 39], "np": [2, 5, 7, 9, 10, 18, 19, 20, 21, 23, 28, 30, 32, 34, 35, 37, 39], "nparamet": 20, "npv": 5, "ntop": 22, "null": [4, 5, 20, 21, 30, 31, 32, 33], "null_auc_3sd_rang": 6, "number": [0, 1, 4, 5, 6, 8, 9, 10, 23, 28, 30, 37, 39], "numer": 15, "numlay": 28, "numpi": [2, 7, 9, 18, 19, 20, 21, 23, 34, 35, 37, 39], "numpydoc": [11, 28], "nurseri": [34, 39], "nursery_data": [34, 35], "nvidia": 24, "nwarn": 20, "o": [7, 19, 20, 21, 22, 39], "obes": [18, 23], "object": [1, 4, 5, 7, 8, 10, 18, 20, 22, 24, 28, 30, 31, 32, 33, 34, 35, 39], "oblig": 0, "observ": [0, 4, 5, 6], "obtain": [0, 23], "obviou": [20, 21], "occasion": 11, "occur": 0, "offer": 0, "offic": 0, "offici": 0, "offlin": 4, "often": [0, 23], "ol": [0, 25], "old": [18, 23], "onc": [0, 39], "one": [0, 1, 2, 6, 10, 18, 22, 23, 28, 32], "onehot": [34, 35, 39], "onehotencod": [34, 35, 39], "ones": [20, 23], "onli": [0, 1, 6, 7, 16, 21, 22, 24, 30, 31, 32, 35, 39], "onlin": [0, 4, 11, 18], "oob_scor": [21, 28], "open": [0, 11, 12, 13, 15, 19, 20, 21, 22, 26, 28, 39], "openml": 35, "oper": [0, 31], "opinion": 0, "oppos": 15, "optim": [0, 30, 31, 32, 33], "optimis": 0, "option": [8, 20, 30, 31, 32, 33, 37], "order": [0, 18, 23, 30, 32, 39], "ordinari": 0, "org": [0, 4, 5, 8], "organis": [0, 15], "orient": 0, "origin": [0, 1, 2, 9, 15, 20, 22, 30, 32, 35, 39], "other": [15, 18, 23, 28, 30, 32, 39], "otherwis": [1, 7, 8, 22, 39], "our": [13, 18, 23], "out": [0, 10, 18, 21, 22, 23, 39], "out_pathnam": 39, "outcom": [0, 8], "outfil": 39, "output": [0, 1, 3, 4, 7, 8, 9, 10, 13, 15, 30, 31, 32, 33, 37, 38, 39], "output_dir": [1, 4, 8, 10, 24, 30, 31, 32, 33, 34, 35, 37, 39], "output_filenam": 39, "output_pytorch": 24, "output_rf_breast_canc": [35, 37], "output_rf_nurseri": 35, "output_test": 39, "output_train": 39, "outputs_safemodel": [30, 31, 32, 33, 34], "outsid": 0, "over": 0, "overal": [0, 10, 18, 23], "overestim": 10, "overfit": 0, "overfitnet": 24, "overload": [30, 31, 32, 33], "overweight": [18, 23], "own": [0, 23], "p": [4, 5, 6, 32], "p3": 19, "p_thresh": [4, 6, 10, 35, 37], "p_valu": 6, "packag": [11, 13, 15, 26, 28, 34, 36], "page": [11, 12, 13, 28], "panda": [18, 23, 39], "para": [15, 26], "param": [1, 4, 8, 10, 15, 26, 28, 30, 32, 33], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 10, 15, 18, 21, 23, 26, 28, 30, 31, 32, 33, 39], "parent": [34, 35, 39], "parliament": [18, 23], "pars": [11, 39], "parse_arg": 39, "parseabl": [15, 26], "parser": 39, "part": [0, 13, 15], "parti": 0, "partial": 0, "particip": 0, "particular": [0, 18, 23], "partit": 8, "partnership": 13, "pass": [1, 2, 23, 30, 32, 35, 39], "path": [1, 8, 9, 11, 20, 21, 30, 31, 32, 33, 34, 39], "patient": [0, 25], "pattern": 0, "pd": [18, 23, 39], "pdf": [1, 4, 5, 7, 8, 10, 30, 31, 32, 33], "pdf_report": 7, "pdif": 6, "pdif_sig": 6, "pdif_val": [4, 10], "pearamet": 28, "penalis": 0, "penalti": 19, "peopl": [0, 10, 18, 23], "per": [0, 4, 10], "perform": [0, 1, 4, 8, 10, 18, 20, 22, 23, 31, 32, 34, 37, 39], "perhap": 23, "permiss": 0, "permut": 5, "permutation_import": [30, 32], "permute_row": 5, "persist": 9, "person": [0, 15, 18], "phase": [15, 22], "phi_hat": 33, "phi_hat_multi": 33, "philosoph": 0, "physic": 0, "physiolog": 0, "pick": 11, "pickl": [9, 39], "pictur": [13, 18], "pip": [11, 14], "pipelin": [8, 30, 32], "pkl": [9, 15, 19, 20, 21, 26, 30, 31, 32, 33, 34, 39], "place": [0, 7, 18, 20], "placehold": 31, "plai": 23, "plane": 24, "platform": 0, "pleas": [11, 30, 32, 34, 39], "plot": [1, 13, 22], "plot_categorical_fract": 1, "plot_categorical_risk": 1, "plot_quantitative_risk": 1, "plot_tre": [20, 21], "plt": [20, 21, 22], "pm10": 1, "pmf": [18, 23], "png": 39, "point": [0, 4, 10, 15, 21, 23], "poisson": [18, 23], "polit": 0, "pool": [0, 24], "popul": [18, 23], "popular": [15, 18, 22, 23], "portion": 23, "posit": [5, 6, 11, 18, 23], "possibl": [0, 1, 6, 10, 11, 18, 30, 31, 32, 33], "possibli": [0, 30], "post": [13, 36], "posthoc": [20, 31], "posthoc_check": [30, 31, 32, 33], "potenti": [0, 10, 18, 23, 30, 31, 32, 33, 34], "power": 15, "ppv": 5, "pr_in": 4, "pr_out": 4, "practic": [12, 20], "pragma": 39, "pre": [0, 11, 39], "precis": 5, "pred": [10, 39], "pred_prob": 5, "predict": [0, 1, 5, 9, 10, 15, 19, 22, 25, 30, 32, 33, 37, 39], "predict_log_proba": [30, 32], "predict_proba": [18, 19, 22, 23, 30, 32, 33, 37], "preliminari": [20, 21, 34, 39], "preliminary_check": [20, 21, 28, 30, 31, 32, 33, 34, 39], "prep": 39, "prepar": 12, "preprocess": [22, 24, 34, 35, 39], "present": [0, 6, 15, 19, 20, 21, 23, 26, 31], "pressur": [18, 23], "pretti": 7, "prevent": [0, 7, 30, 31, 32, 33], "previou": 23, "primari": 0, "prime": [18, 23], "primer": 11, "print": [7, 18, 19, 20, 21, 22, 23, 28, 39], "prior": 0, "privaci": [0, 1, 5, 8, 11, 15, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37], "privat": [0, 16, 33], "prng": [18, 23], "prob": 18, "prob_membership": 23, "proba": 30, "proba_test": [9, 10, 37], "proba_train": [9, 10, 37], "probabl": [0, 4, 5, 8, 9, 10, 18, 22, 23, 30, 32, 33, 37], "problem": [22, 23], "problemat": 34, "proce": 19, "procedur": 0, "process": [0, 1, 2, 9, 15, 23, 24, 30, 35], "process_attack_target_json": 39, "process_dataset": 39, "produc": [0, 18, 20, 23], "product": 18, "program": 0, "programm": 13, "programmat": 1, "project": [0, 11, 13, 15, 22, 33], "propag": 24, "properti": [0, 8, 9, 18, 23, 30, 32], "proport": [1, 5, 10, 23], "protect": [0, 1, 13, 28, 30, 31, 32, 33], "prototyp": 31, "provid": [0, 8, 11, 13, 15, 17, 18, 23, 26, 30, 32, 34, 36, 39], "proxi": 23, "prune": 30, "pseudo": 0, "pseudonym": 0, "public": [0, 18, 23], "publicli": 15, "publish": [18, 23], "pull": 11, "purpos": 0, "push": 11, "put": [0, 23], "pval": 5, "py": [11, 22, 24, 28, 35, 39], "pylab": 22, "pylint": 11, "pyplot": [20, 21], "pytest": 11, "python": [2, 7, 9, 11, 13, 17, 22, 30, 32, 33, 39], "pytorch": [2, 9, 12, 13], "pytorchdatahandl": [2, 24], "quantifi": 0, "quantit": 1, "quantiz": [0, 15], "queri": [0, 18, 22], "question": [18, 23], "quick": [12, 23], "quit": 23, "r": [1, 13, 19, 30, 32], "race": 0, "radial": 0, "rais": [7, 30, 32, 39], "ran": 20, "rand": 5, "random": [0, 5, 6, 10, 16, 18, 20, 23, 32, 35], "random_st": [18, 20, 21, 23, 24, 28, 34, 35, 39], "randomforest": [8, 17], "randomforestclassifi": [10, 21, 35, 37, 39], "randomli": [0, 18, 23], "randomst": [18, 23], "rang": [1, 6, 18, 20, 21, 22, 23, 24, 28, 31, 34, 35, 39], "rare": [0, 10], "rate": [5, 6], "rather": [0, 18], "ratio": [1, 4], "raw": [2, 9, 24, 35], "rawdt": 20, "rb": 39, "rbf_svm": 19, "rc": 22, "re": [1, 18, 23, 30, 32, 39], "read": [0, 11, 19, 20, 21, 31, 39], "read_csv": 39, "readabl": 0, "readi": 39, "readili": 0, "readm": 25, "real": [0, 12, 18, 23, 39], "realeas": [18, 23], "realis": [18, 23], "realist": [10, 18, 23], "realiti": [18, 23], "realli": [20, 21], "reaserch": 39, "reason": [0, 15, 19, 20, 21, 26], "recal": [5, 18, 23], "recognis": 1, "recommend": [0, 10, 15, 20, 21, 26, 31], "recommendat": [15, 26], "record": [0, 1, 4, 8, 18, 23, 32], "recreat": 39, "recurs": 7, "recursionerror": 7, "reduc": [0, 23, 32], "reduct": [30, 32], "refer": [0, 7, 13, 39], "reflect": [20, 28], "region": 10, "regist": 0, "regress": [7, 8, 30], "regressor": 0, "regul": 0, "regularis": 0, "reidentif": 8, "reinforc": 0, "relat": 6, "relationship": [0, 15], "releas": [0, 15, 18, 20, 21, 23, 26, 39], "release_config": 39, "relev": [0, 30, 31, 32, 39], "reliabl": 0, "religi": 0, "relu": 24, "remain": [5, 18], "rememb": [0, 23], "remot": 0, "remov": [0, 11], "render": [0, 28], "rep": [10, 39], "repetit": [6, 10], "replac": [0, 13, 39], "replic": 0, "repond": 23, "repons": 23, "report": [0, 1, 3, 4, 8, 10, 12, 13, 15, 26, 30, 31, 32, 33, 35, 37, 38, 39], "report_categor": 1, "report_dest": 7, "report_individu": [4, 8], "report_quantit": 1, "repositori": [20, 25], "repres": [0, 6, 18], "represent": 7, "reproduc": [0, 10], "reproduce_split": 10, "request": [0, 2, 11, 20, 24, 30, 32, 39], "request_releas": [19, 20, 21, 30, 31, 32, 33, 34, 39], "requir": [0, 1, 22, 24, 25, 28, 30, 32, 35, 39], "research": [0, 1, 2, 13, 15, 18, 19, 21, 22, 23, 26, 31, 32, 33, 34, 39], "residu": 8, "resiz": 0, "resourc": [0, 13], "respond": 23, "respons": [0, 25], "restart": [30, 31, 32, 33], "restrict": [0, 30, 31, 32, 33], "restructur": 11, "restructuredtext": 11, "result": [0, 1, 8, 9, 30, 31, 32, 33, 39], "retain": [0, 30, 32], "retriev": 0, "return": [1, 2, 4, 5, 7, 8, 9, 10, 19, 20, 24, 28, 30, 31, 32, 33, 35, 39], "return_x_i": [35, 37], "reult": 20, "reveal": [0, 23], "rezaei": 10, "right": [0, 11, 23], "risk": [1, 8, 10, 12, 13, 15, 19, 21, 23, 26, 31, 34, 35, 39], "risk_appetite_config": 8, "risk_exampl": [11, 25], "riski": 8, "rmd": 25, "roc": 22, "roc_curv": 22, "role": [0, 18, 23], "root": [20, 22, 24, 30, 32], "root_dir": [19, 20, 21], "root_project_fold": 19, "rotat": 0, "rough": 23, "roughli": 23, "round": 22, "rout": [30, 32], "row": [0, 10, 18, 21, 22, 23], "row_indic": 39, "rst": [11, 28], "rule": [8, 30, 31, 32, 33], "run": [0, 1, 3, 4, 8, 10, 11, 24, 25, 30, 31, 32, 33, 35, 37, 39], "run_attack": [30, 31, 32, 33, 39], "run_attack_rep": 10, "run_user_stori": 39, "runner": 11, "s010351": 13, "sacro": [0, 5, 8, 11, 12, 16, 24, 25, 35, 37, 39], "sacroml": [1, 2, 4, 5, 7, 8, 9, 10, 11, 14, 24, 30, 31, 32, 33, 34, 35, 37, 39], "safe": [0, 10, 12, 16, 17, 18, 28, 30, 31, 32, 33, 34], "safe2": 20, "safe3": 20, "safe4": 20, "safedecisiontre": [11, 17, 28, 29, 38, 39], "safedecisiontreeclassifi": [30, 34, 39], "safedtmodel": 20, "safedtmodel2": 20, "safedtmodel3": 20, "safedtmodel4": 20, "safedtmodel5": 20, "safedtmodel6": 20, "safedtmodel7": 20, "safegradientboost": 28, "safekerasclassif": [30, 31, 32, 33], "safeload": 39, "safemodel": [9, 11, 12, 19, 20, 21, 27, 30, 31, 32, 33, 36, 38, 39], "safemodeltomakesaf": 28, "safer": [18, 20], "saferandomforest": [28, 29, 38], "saferandomforestclassifi": [31, 32], "saferfmodel": [21, 31], "safesvc": [19, 29, 38], "safeti": 20, "same": [0, 1, 10, 18, 20, 21, 22, 23, 28, 30, 31, 32, 39], "same_weight": 28, "sampl": [0, 2, 4, 5, 9, 10, 24, 30, 32, 39], "sample_weight": [30, 32], "satisfi": 39, "sav": [30, 31, 32, 33], "save": [0, 9, 11, 15, 18, 22, 24, 26, 30, 31, 32, 33, 35, 37, 39], "save_directori": 39, "saved_model": [20, 28, 31], "saved_separ": [30, 31, 32, 33], "saved_v": [30, 31, 32, 33], "savetxt": [37, 39], "scale": [8, 33], "scenario": [4, 7, 10, 12, 15, 16, 37, 39], "scientist": [18, 23], "scikit": [2, 9, 12], "scipi": [18, 23], "score": [1, 5, 18, 20, 21, 23, 30, 32, 34, 35], "scrambl": 0, "script": [9, 12, 39], "sdc": [5, 11, 15, 17, 19, 20, 21], "sde": 0, "search": [1, 13, 18, 30], "searchcio": 0, "second": [4, 18, 23], "section": [0, 12, 16, 24, 25, 34, 35, 37, 39], "secur": [0, 13, 15, 39], "see": [0, 1, 4, 5, 10, 18, 23, 25, 30, 32, 34, 36, 39], "seed": [18, 23], "seek": 0, "seen": [0, 15, 18, 23], "segment": 0, "select": 39, "self": [0, 15, 24, 28, 30, 31, 32, 33, 35], "semi": 13, "sensibl": 7, "sensit": [0, 15, 39], "sent": 33, "separ": [0, 7, 31], "sequenc": [2, 9, 24, 35], "sequenti": 24, "serial": 7, "serpel": 1, "server": 0, "servic": 0, "set": [0, 1, 9, 10, 15, 18, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 37, 39], "set_config": [30, 32], "set_fit_request": [30, 32], "set_param": [30, 32, 33], "set_score_request": [30, 32], "setlevel": [19, 39], "setup": 11, "sever": [8, 30], "sex": 0, "sexual": 0, "sgd": 0, "shadow": [4, 10, 23], "shadow_df": 23, "shadow_respons": 23, "shadow_svc": 23, "shadow_test_i": 23, "shadow_test_x": 23, "shadow_train_i": 23, "shadow_train_x": 23, "shape": [5, 19, 28, 30, 32, 34, 39], "share": 0, "ship": 24, "short": 12, "should": [0, 2, 7, 11, 15, 18, 23, 28, 30, 32, 39], "shouldn": 18, "show": [0, 1, 3, 12, 22, 24, 34, 35, 37, 39], "shown": 23, "shuffl": [2, 24, 34, 39], "signific": [0, 4, 6, 10, 11, 18, 23], "similar": [0, 6, 23, 39], "similarli": 23, "simonr04": 22, "simpl": [0, 12, 23, 30, 32, 35], "simplest": 39, "simpli": 7, "simul": [0, 10, 36], "sinc": [0, 5, 20, 30, 31, 32, 33], "singl": [0, 1, 4, 6, 7, 18, 20, 21, 30, 32, 33, 39], "site": 11, "situat": 0, "six": [18, 23], "size": [0, 22, 28, 32], "skip": 7, "skipkei": 7, "sklearn": [10, 18, 20, 21, 22, 23, 28, 30, 32, 33, 34, 35, 37, 39], "sklearndatahandl": [2, 35], "slower": 32, "small": [0, 8, 18], "smallest": 30, "smallgroup_risk": 8, "smartphon": 0, "smith": [1, 19, 20, 21], "smoker": [18, 23], "so": [1, 11, 18, 23, 28, 30, 32], "social": [0, 34, 35, 39], "softwar": 0, "solut": 0, "solvenc": 25, "solver": 37, "som": [0, 15], "some": [0, 1, 5, 8, 10, 15, 17, 18, 22, 23, 28, 30, 32], "someon": [0, 20], "someth": [0, 20, 22], "sometim": 0, "somewher": 39, "sort": [7, 10, 11], "sort_kei": 7, "sort_prob": 10, "sort_valu": 18, "sorted_attack_valu": 18, "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 22, 26, 28, 30, 31, 32, 33], "space": [8, 33], "spars": [30, 32], "spec": 39, "spec_from_file_loc": 39, "special": 0, "specif": [0, 6, 7, 10, 13, 30, 31, 32, 33, 39], "specifi": [0, 7, 8, 20, 30, 31, 32, 33, 37], "specul": 23, "spell": 11, "spent": 20, "sphinx": 11, "split": [1, 2, 10, 20, 22, 23, 24, 30, 31, 32, 33, 34, 35, 37, 39], "splitter": 20, "sqrt": 21, "squar": 0, "staff": [0, 1, 39], "stage": 0, "staggemei": 1, "standard": [0, 4, 5, 6, 7, 8, 18, 23], "standardis": 6, "star": 11, "start": [12, 22], "stat": [18, 23], "state": 20, "statement": 39, "static": 8, "statist": [0, 1, 13, 15], "statu": 0, "step": [0, 12, 23, 28, 39], "still": [0, 37], "stochast": 0, "storag": 9, "store": [0, 1, 4, 6, 8, 9, 10, 22, 28, 30, 31, 32, 33, 39], "stori": 12, "str": [1, 4, 7, 8, 9, 10, 28, 30, 31, 32, 33, 34, 35, 39], "straightforward": [18, 23], "strategi": 15, "stratifi": [34, 35, 39], "string": [1, 7, 30, 31, 32, 33], "strong": [18, 23], "stronli": 23, "structur": [0, 3, 7, 13, 30, 35, 37, 38], "structural_attack": [8, 35, 37], "structuralattack": [8, 35, 37], "structuralattackresult": 8, "structuralrecordlevelresult": 8, "studi": [0, 8], "sub": [30, 32], "subject": 0, "submit": 11, "subplot": [20, 21], "subsequ": 20, "subset": [2, 10, 24, 30, 32, 35], "substanti": 0, "subtitl": 7, "subtl": 0, "subtre": 30, "subx": 22, "succe": 10, "success": [0, 5, 23], "suffer": [18, 23], "suggest": 0, "suit": 28, "sum": [18, 19, 23, 30, 32], "summari": [0, 39], "summaris": 0, "super": [0, 15, 20, 24, 28, 31], "supervis": 0, "suppli": [2, 35, 39], "support": [0, 2, 8, 16, 18, 22, 23, 33, 37, 39], "support_": 22, "support_vectors_": 22, "suppos": 10, "suppress": [1, 39], "sure": [31, 39], "survei": 0, "suscept": 18, "sv": 22, "sv_idx": 22, "svc": [15, 17, 18, 19, 22, 23, 33], "svm": [0, 18, 22, 23, 33], "sy": [19, 20, 21], "synonym": 0, "syntax": [11, 13], "synthet": [0, 24], "system": [0, 11, 20, 24], "t": [1, 7, 15, 18, 21, 22, 23, 30, 32, 37], "tabl": [8, 18], "tag": 39, "take": [7, 18, 23, 39], "taken": 28, "talk": 17, "target": [0, 1, 2, 3, 4, 6, 8, 10, 19, 20, 21, 24, 30, 31, 32, 33, 34, 35, 37, 38, 39], "target_datafram": 39, "target_dir": [24, 35], "target_encod": 39, "target_filenam": 39, "target_json": [19, 20, 21], "target_model": [6, 39], "target_model_param": 6, "target_pytorch": 24, "target_result": 39, "target_rf_breast_canc": 35, "target_rf_nurseri": 35, "target_v": 39, "task": [0, 18, 23], "teach": 0, "technic": 23, "techniqu": [0, 12, 25], "techtarget": 0, "tell": [0, 5, 23], "templat": 39, "tensor": 24, "tensorflow": [5, 30, 31, 32, 33], "term": [0, 19], "test": [0, 1, 4, 5, 6, 7, 9, 10, 11, 15, 22, 23, 24, 28, 30, 32, 34, 35, 37, 39], "test_acc": 39, "test_beta": [10, 35, 37], "test_correct": 10, "test_exampl": [18, 23], "test_featur": 33, "test_i": [22, 39], "test_indic": 39, "test_load": 24, "test_pr": 23, "test_prob": [22, 39], "test_prop": [10, 35, 37], "test_set": 24, "test_siz": [23, 34, 35, 37, 39], "test_x": [22, 39], "testsav": 20, "testsaverf": 21, "testsavesvc": 19, "tevc": 1, "text": [0, 7, 11], "text_report": 39, "th": 32, "than": [0, 1, 15, 18, 19, 20, 21, 22, 23, 26, 31, 32], "the_kwd": 28, "thei": [0, 10, 17, 18, 20, 22, 23, 28, 30, 39], "them": [0, 15, 18, 22, 23], "themselv": [0, 39], "theori": 0, "therebi": 0, "therefor": [18, 22, 23], "thetre": 30, "thi": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39], "thing": [4, 10, 18, 20, 21, 23], "third": 0, "those": [15, 18, 23, 30, 31, 32, 33], "three": 6, "threshold": [1, 4, 8, 10, 30], "through": [0, 8, 15, 17, 18, 23, 26, 30, 32, 36, 39], "thu": [30, 31, 32, 33], "time": [6, 10, 18, 20, 34, 39], "timestamp": [19, 20, 21, 28, 31, 32, 33], "titl": [7, 11], "tnr": 5, "to_numpi": 39, "toarrai": [34, 35, 39], "too": 0, "tool": 15, "top": [4, 8, 11, 22, 39], "torch": [8, 24], "torchvis": 24, "total": [18, 22, 30, 32], "totensor": 24, "tpr": [5, 6, 22], "trace": 0, "track": [0, 11], "trade": 0, "tradit": [8, 15], "trail": 11, "train": [0, 1, 4, 8, 9, 10, 12, 13, 15, 21, 24, 30, 31, 32, 33, 34, 35, 36, 37], "train_acc": 39, "train_beta": [10, 35, 37], "train_correct": 10, "train_featur": 33, "train_i": [22, 23, 39], "train_indic": 39, "train_label": 33, "train_load": 24, "train_module_path": [9, 24], "train_param": [9, 24], "train_pr": 23, "train_prob": [22, 39], "train_set": 24, "train_test_split": [22, 23, 34, 35, 37, 39], "train_x": [22, 23, 39], "training_artefact": 39, "training_artefacts_dir": 39, "transact": 1, "transfer": 0, "transform": [0, 5, 24, 34, 39], "tre": [0, 1, 8, 10, 13, 15, 18, 20, 22, 23, 26, 30, 31, 32, 33, 39], "treatment": 0, "tree": [0, 16, 21, 27, 28, 30, 32], "tree1": 30, "tree1_tre": 30, "tree2": 30, "tree2_tre": 30, "tree_": [20, 30], "treerowcol": 21, "trevolut": 13, "trial": 0, "trim": 11, "trivial": [20, 23], "truck": 24, "true": [1, 4, 5, 6, 7, 8, 10, 18, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 37, 39], "trust": [0, 13, 15, 26, 39], "try": [18, 23, 39], "tumour": 0, "tune": [0, 18, 20], "tupl": [2, 5, 7, 10, 24, 28, 30, 31, 32, 33, 35], "turn": 18, "tutori": [11, 12], "two": [0, 4, 10, 18, 20, 22, 23, 30, 31, 36], "txt": 39, "type": [0, 5, 6, 8, 9, 15, 23, 28, 30, 31, 39], "typeerror": 7, "typic": [0, 12, 15], "u": [0, 23], "uk": [0, 13], "unauthoris": 0, "unbias": 0, "unbroken": 1, "unchang": [30, 32], "uncommon": [18, 23], "uncov": 0, "undefin": [30, 31, 32, 33, 39], "under": [0, 4, 6, 11, 15, 18, 23], "understand": [0, 11, 17], "undertak": 0, "undu": 8, "unfortun": 22, "unimport": 23, "union": 0, "uniqu": [0, 6, 18, 22, 23, 30, 32], "unit": [0, 11], "unknown": [18, 19, 20, 21], "unlaw": 0, "unless": [30, 32, 39], "unlik": 10, "unlimit": 0, "unnecessari": 8, "unnecessarili": 8, "unnecessary_risk": 8, "unobtrus": 0, "unprocess": [1, 2, 9, 24, 39], "unrepres": 0, "unsaf": [15, 26], "unscrambl": 0, "unseen": 0, "unspecifi": 0, "unsupervis": 0, "unsupport": 12, "until": [0, 39], "untrain": 0, "unus": 11, "up": [0, 11, 18, 23, 30, 32, 39], "updat": [11, 30, 32], "uper": 20, "upgrad": 11, "upheld": [30, 31, 32, 33], "upon": [10, 23], "upper": [1, 20], "us": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39], "usabl": 0, "usag": [11, 12], "user": [0, 1, 11, 12, 13, 14, 15, 22, 26, 30, 31, 32], "user_stori": [11, 39], "user_stories_flow_chart": 39, "user_stories_resourc": 39, "user_story_1": 39, "user_story_1_tr": 39, "user_story_2": 39, "user_story_2_tr": 39, "user_story_3": 39, "user_story_3_tr": 39, "user_story_4": 39, "user_story_4_tr": 39, "user_story_7": 39, "user_story_7_tr": 39, "user_story_8": 39, "user_story_8_tr": 39, "usual": [0, 1, 5], "utf": 39, "util": [0, 12, 24, 30, 32], "uw": 13, "v": [18, 23], "v1": 13, "val": [28, 31, 39], "val2": 39, "valid": [0, 28], "valu": [0, 1, 4, 5, 6, 8, 10, 15, 18, 21, 22, 23, 26, 30, 31, 32, 33, 39], "valueerror": 7, "variabl": [0, 5, 6, 10, 11, 18, 20, 23], "varieti": [0, 11], "variou": [0, 12, 16, 25], "ve": [18, 39], "vector": [0, 15, 16, 18, 22, 23, 33], "verbos": [21, 28, 30, 31, 32, 33], "verctor": 22, "veri": [0, 11, 18, 19, 23], "version": [0, 7, 11, 16, 28, 30, 31, 32, 33, 39], "via": [0, 15, 22, 30, 31, 32, 33, 39], "view": 13, "viewer": 13, "violat": [0, 8, 20, 30, 31, 32, 33], "virtu": 0, "virtual": 11, "visit": 13, "vote": [0, 32], "vstack": [20, 21, 23], "vulner": [0, 1, 8, 10, 18, 23], "w": [30, 32], "wa": [0, 6, 10, 13, 18, 20, 23, 30, 31, 32, 33], "wai": [0, 20, 23, 39], "want": [0, 15, 18, 22, 23], "warm_start": [21, 28], "warn": [0, 15, 20, 26, 30, 31, 32, 39], "wasn": 23, "wast": 39, "wb": 39, "wca": 39, "we": [0, 4, 11, 17, 18, 21, 22, 23, 39], "web": [0, 11], "weight": [0, 8, 15, 18, 23, 28, 30, 32], "welcom": 11, "well": [0, 23, 30, 32], "were": [0, 10, 13, 18, 20, 23], "what": [0, 18, 22, 23, 30], "when": [0, 6, 10, 18, 23, 30, 31, 32, 37, 39], "where": [0, 1, 4, 6, 10, 11, 15, 18, 22, 23, 26, 30, 32, 35], "wherea": 18, "wherein": 0, "whether": [0, 1, 2, 4, 5, 8, 9, 10, 18, 20, 22, 23, 30, 31, 32, 33, 39], "which": [0, 1, 5, 6, 7, 8, 10, 11, 13, 15, 17, 18, 23, 30, 32, 33, 35, 39], "whichev": 23, "whichtre": 21, "while": [0, 30], "whilst": 0, "white": [0, 10], "whitespac": [7, 11], "who": [0, 18, 23], "whom": 0, "whose": 0, "width": [11, 19], "wish": [0, 22], "within": [0, 1, 11, 18, 20, 22, 23, 30, 31, 32], "without": [0, 11, 22], "won": [22, 23], "word": 0, "work": [0, 11, 13, 22, 30, 32, 39], "workflow": [0, 11, 12, 39], "world": [0, 12, 39], "worst": [3, 7, 30, 31, 32, 33, 35, 37, 38], "worst_cas": 39, "worst_case_attack": [10, 24, 35, 37, 39], "worstcaseattack": [10, 24, 35, 37, 39], "would": [0, 7, 18, 20, 22, 23, 30, 39], "wrap": [9, 24, 34, 35, 39], "wrapper": [0, 11, 15, 24, 26, 28, 31, 34, 35, 37, 39], "wrapper_svm": 19, "write": [1, 7, 8, 11, 20, 24, 30, 31, 32, 33, 35, 39], "write_json": 7, "write_pdf": 7, "write_report": [1, 4, 8, 10], "written": [11, 28, 39], "www": 0, "x": [0, 2, 5, 10, 18, 19, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 37], "x_dim": 24, "x_encod": 39, "x_leav": [30, 32], "x_orig": 35, "x_prop": 5, "x_test": [9, 34, 35, 37, 39], "x_test_orig": [9, 34, 39], "x_test_path": 39, "x_train": [9, 34, 35, 37, 39], "x_train_orig": [9, 34, 39], "x_train_path": 39, "x_transform": 39, "xgboost": [0, 8, 14, 28], "xlabel": 22, "xprop": 5, "y": [0, 2, 5, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 37], "y_dim": 24, "y_orig": 35, "y_pred_proba": 5, "y_test": [5, 9, 34, 35, 37, 39], "y_test_orig": [9, 34, 39], "y_test_path": 39, "y_train": [9, 34, 35, 37, 39], "y_train_orig": [9, 34, 39], "y_train_path": 39, "y_transform": 39, "y_true": 5, "yaml": [8, 39], "ye": [15, 18, 23], "year": [18, 23], "yield": [1, 7], "ylabel": 22, "you": [7, 11, 17, 20, 24, 28, 30, 32, 37, 39], "your": [11, 13, 18, 20, 23, 24, 39], "yp": 5, "zero": [0, 8, 19, 23, 30, 32], "zip": 18}, "titles": ["Glossary and definitions", "Attribute Attack", "Dataset Handlers", "Attacks", "LiRA Attack", "Metrics", "JSON Output for Attacks", "Report", "Structural Attack", "Target", "Worst Case Attack", "Contributing", "Examples", "Welcome to the AI-SDC family of tools", "Installation", "Welcome to SACRO-ML", "Notebook Examples", "Example Notebooks", "Risk of cancer prediction for patients with multiple disorders", "Safe Support Vector Machine Notebook", "Safe Decision Tree Notebook", "Safe Random Forest Notebook", "Instance based attacks", "Drug response prediction for cancer patients", "PyTorch Examples", "Risk Assessment Examples", "What is safemodel?", "Examples", "Extending SafeModel", "Safemodel", "SafeDecisionTree", "Base Class", "SafeRandomForest", "SafeSVC", "SafeModel Examples", "Scikit-learn Examples", "What SACRO-ML Supports", "Unsupported Model Examples", "User Guide", "User Stories"], "titleterms": {"": [18, 20, 23], "1": [20, 39], "2": 39, "3": 39, "A": [19, 21], "As": 20, "The": [18, 19, 20, 21, 23, 28], "__init__": 28, "accord": 20, "acknowledg": 13, "actor": 0, "ad": 20, "add": 28, "advanc": 39, "after": 20, "afterward": 20, "ai": 13, "all": 21, "analysi": 39, "ani": [21, 28], "api": [1, 2], "approach": 20, "approxim": 19, "ar": [15, 19], "ask": 20, "assess": [25, 39], "attack": [1, 3, 4, 6, 8, 10, 15, 18, 20, 22, 23, 39], "attribut": [1, 18], "back": 20, "base": [22, 31], "basic": [20, 21, 39], "becaus": 20, "befor": 20, "breast": 19, "can": [15, 19, 20], "cancer": [18, 19, 23, 35], "case": [6, 10, 20, 21], "cell": 20, "chang": 20, "check": [19, 20, 28], "checkfil": [19, 20, 21], "cifar": 24, "class": [20, 21, 28, 31], "code": 20, "command": 19, "comment": 19, "commun": 13, "conclus": [18, 23], "conda": 14, "configur": 39, "confirm": 28, "content": [11, 20, 21], "contribut": 11, "copi": 28, "core": 28, "could": 20, "creat": [18, 23], "data": [0, 20, 21, 28, 39], "dataset": [2, 19, 24, 35], "decis": 20, "defin": [19, 20, 21, 28], "definit": 0, "demonstr": 20, "design": 28, "develop": [11, 19, 20], "dhat": 19, "differenti": 19, "dilig": 20, "disclos": [20, 21], "disclosur": [0, 20], "disord": 18, "do": 20, "doc": 11, "document": [11, 28], "doe": [18, 23], "doesn": 20, "dp": 19, "drug": 23, "each": 20, "enforc": 20, "equival": 19, "examin": [19, 20, 21], "examine_separ": 28, "exampl": [12, 16, 17, 18, 20, 23, 24, 25, 27, 34, 35, 37], "explor": 20, "extend": 28, "extract": 20, "famili": 13, "file": 28, "fit": [19, 20, 28], "forest": 21, "format": [20, 21], "from": 20, "full": 27, "function": [20, 21, 28], "gener": [6, 11], "get": [13, 18, 23], "glossari": 0, "guid": [11, 19, 21, 38], "hand": [18, 23], "handler": 2, "have": 20, "helper": 28, "here": 20, "how": [18, 23], "i": [15, 19, 20, 26], "ignore_item": 28, "imag": 11, "implement": [19, 20, 21], "import": 20, "includ": 28, "index": 14, "indic": 13, "infer": [18, 23], "init": 20, "instal": 14, "instanc": 22, "intend": 15, "item": 28, "json": [6, 20, 21, 28], "kera": 17, "kernel": 19, "leaf": 20, "learn": [0, 13, 35], "least": 20, "length": 27, "let": [18, 20, 21, 23], "level": 19, "librari": [20, 21], "like": 20, "lira": [4, 6], "list": 20, "local": 11, "look": 20, "low": 19, "machin": [0, 13, 19], "make": [20, 21], "manipul": 19, "manual": 20, "membership": 23, "method": 28, "metric": 5, "min_samples_leaf": 20, "mitig": [0, 18, 23], "ml": [13, 15, 36], "model": [17, 18, 19, 20, 22, 23, 37, 39], "modifi": 20, "modular": 28, "multipl": 18, "n": 20, "new": [20, 21], "next": [19, 20], "node": 20, "non": 20, "notebook": [16, 17, 19, 20, 21, 27], "now": 20, "nurseri": 35, "one": [20, 21], "onli": [19, 20], "option": 28, "order": 20, "origin": [18, 23], "other": [0, 17], "our": 20, "out": 19, "output": [6, 20], "overrid": 28, "packag": 14, "param": 20, "paramet": [19, 20], "paramnam": 28, "pass": 19, "path": 19, "patient": [18, 23], "plot": 20, "point": 20, "pose": 20, "posthoc_check": 20, "predict": [18, 23], "prelimanari": 20, "previou": 20, "privaci": [13, 39], "privat": 19, "problem": 20, "procedur": 19, "process": 39, "purpl": 20, "put": 21, "pytest": 28, "python": [14, 25], "pytorch": 24, "quick": [11, 19, 21, 27], "r": 25, "random": 21, "rang": 19, "raw": 20, "rbf": 19, "realis": 20, "recomend": [20, 21], "recommend": 19, "refer": [1, 2], "relat": 0, "releas": 19, "report": [7, 20, 21], "repositori": 11, "request": 19, "research": 20, "respons": 23, "risk": [0, 18, 20, 25], "rule": [20, 28], "run": 20, "sacro": [13, 15, 36], "safe": [19, 20, 21], "safe_decis": 20, "safedecisiontre": [27, 30], "safedecisiontreeclassifi": 20, "safemodel": [15, 26, 28, 29, 34], "safer": [19, 21, 28], "saferandomforest": [27, 32], "saferandomforestclassifi": 21, "safesvc": [27, 33], "sampl": 20, "save": [19, 20, 21], "scikit": 35, "sdc": 13, "see": 20, "set": [19, 20], "sever": 20, "show": 20, "simpl": 24, "simul": 15, "sklearn": [17, 19], "so": 20, "some": [20, 21], "sphinx": 28, "start": [11, 13, 19, 20, 21, 27], "static": 11, "step": [19, 20], "stori": 39, "structur": [6, 8, 11, 28], "style": 11, "summari": 12, "suppli": 20, "support": [13, 19, 36], "t": 20, "tabl": 13, "target": 9, "templat": 28, "thi": [18, 20, 23], "threshold": 20, "through": 19, "togeth": 21, "too": 19, "tool": 13, "train": [18, 20, 22, 23, 39], "tree": 20, "try": 20, "tutori": [17, 27], "unsaf": 20, "unsupport": 37, "unusu": 28, "updat": 28, "us": [15, 19, 21], "usag": [1, 34], "user": [20, 38, 39], "util": 39, "valu": [19, 20], "vector": 19, "version": [19, 20], "visual": [20, 21], "warn": [19, 21], "we": [19, 20], "welcom": [13, 15], "what": [15, 20, 26, 36], "when": 15, "where": 20, "which": 20, "wisconsin": 19, "within": 19, "work": [18, 23, 37], "worst": [6, 10], "wrapper": 20, "write": 28, "written": 20}})